{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axiosApiInstance from '../interceptor/interceptor';\n\nconst addLikeToImage = async (data, token) => {\n  return axiosApiInstance.post('/imageLikes/addLikeToImage', _objectSpread({}, data), {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst checklikeToImage = async (data, token) => {\n  return axiosApiInstance.post('/imageLikes/checklikeToImage', _objectSpread({}, data), {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst dislikeImage = async (data, token) => {\n  return axiosApiInstance.post('/imageLikes/dislikeImage', _objectSpread({}, data), {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst addLikeToCommentImage = async (data, token) => {\n  return axiosApiInstance.post('/imageLikes/addLikeToCommentImage', _objectSpread({}, data), {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst checklikeToCommentImage = async (data, token) => {\n  return axiosApiInstance.post('/imageLikes/checklikeToCommentImage', _objectSpread({}, data), {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst dislikeToCommentImage = async (data, token) => {\n  return axiosApiInstance.post('/imageLikes/dislikeToCommentImage', _objectSpread({}, data), {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst getLikestUserNameFromImage = async (data, token) => {\n  return axiosApiInstance.post('/imageLikes/getLikestUserNameFromImage', _objectSpread({}, data), {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst getLikestUserNameFromCommentImage = async (data, token) => {\n  return axiosApiInstance.post('/imageLikes/getLikestUserNameFromCommentImage', _objectSpread({}, data), {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst countImageLikes = async (data, token) => {\n  return axiosApiInstance.post('/imageLikes/countImageLikes', _objectSpread({}, data), {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst countImageCommentsLikes = async (data, token) => {\n  return axiosApiInstance.post('/imageLikes/countImageCommentsLikes', _objectSpread({}, data), {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nexport { countImageCommentsLikes, countImageLikes, getLikestUserNameFromCommentImage, getLikestUserNameFromImage, addLikeToImage, checklikeToImage, dislikeImage, addLikeToCommentImage, checklikeToCommentImage, dislikeToCommentImage };","map":{"version":3,"sources":["F:/AHKI/services/imageLikes.js"],"names":["axiosApiInstance","addLikeToImage","data","token","post","headers","Authorization","checklikeToImage","dislikeImage","addLikeToCommentImage","checklikeToCommentImage","dislikeToCommentImage","getLikestUserNameFromImage","getLikestUserNameFromCommentImage","countImageLikes","countImageCommentsLikes"],"mappings":"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","sourcesContent":["import axiosApiInstance from '../interceptor/interceptor'\r\n\r\nconst addLikeToImage = async (data,token) => {\r\n    return axiosApiInstance.post('/imageLikes/addLikeToImage',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\nconst checklikeToImage = async (data,token) => {\r\n    return axiosApiInstance.post('/imageLikes/checklikeToImage',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\nconst dislikeImage = async (data,token) => {\r\n    return axiosApiInstance.post('/imageLikes/dislikeImage',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\nconst addLikeToCommentImage = async (data,token) => {\r\n    return axiosApiInstance.post('/imageLikes/addLikeToCommentImage',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\nconst checklikeToCommentImage = async (data,token) => {\r\n    return axiosApiInstance.post('/imageLikes/checklikeToCommentImage',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\nconst dislikeToCommentImage = async (data,token) => {\r\n    return axiosApiInstance.post('/imageLikes/dislikeToCommentImage',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\n\r\n\r\nconst getLikestUserNameFromImage = async (data,token) => {\r\n    return axiosApiInstance.post('/imageLikes/getLikestUserNameFromImage',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\nconst getLikestUserNameFromCommentImage = async (data,token) => {\r\n    return axiosApiInstance.post('/imageLikes/getLikestUserNameFromCommentImage',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\nconst countImageLikes = async (data,token) => {\r\n    return axiosApiInstance.post('/imageLikes/countImageLikes',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\nconst countImageCommentsLikes = async (data,token) => {\r\n    return axiosApiInstance.post('/imageLikes/countImageCommentsLikes',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\n\r\nexport {countImageCommentsLikes,countImageLikes,getLikestUserNameFromCommentImage,getLikestUserNameFromImage,addLikeToImage,checklikeToImage,dislikeImage,addLikeToCommentImage,checklikeToCommentImage,dislikeToCommentImage}"]},"metadata":{},"sourceType":"module"}