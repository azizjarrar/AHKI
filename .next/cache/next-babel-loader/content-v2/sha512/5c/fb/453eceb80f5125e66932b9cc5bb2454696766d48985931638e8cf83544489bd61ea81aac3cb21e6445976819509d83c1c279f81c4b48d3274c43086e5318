{"ast":null,"code":"import _regeneratorRuntime from \"F:/AHKI/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:/AHKI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axiosApiInstance from '../interceptor/interceptor'; // send ref token and get new token\n\nvar refreshAccessToken = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(token) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", axiosApiInstance.post(\"/token/getRefreshAccessToken\", {\n              ref_token: token\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function refreshAccessToken(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar deleteRefrechTokenOldOne = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(RefreshAccessToken) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", axiosApiInstance.post(\"/token/deleteRefrechTokenOldOne\", {\n              RefreshAccessToken: RefreshAccessToken\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function deleteRefrechTokenOldOne(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport { refreshAccessToken, deleteRefrechTokenOldOne };","map":{"version":3,"sources":["F:/AHKI/services/refreshAccessToken.js"],"names":["axiosApiInstance","refreshAccessToken","token","post","ref_token","deleteRefrechTokenOldOne","RefreshAccessToken"],"mappings":";;AAAA,OAAOA,gBAAP,MAA6B,4BAA7B,C,CACA;;AACA,IAAMC,kBAAkB;AAAA,sEAAC,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,6CACfF,gBAAgB,CAACG,IAAjB,CAAsB,8BAAtB,EAAqD;AAACC,cAAAA,SAAS,EAACF;AAAX,aAArD,CADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA,kBAAlBD,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;AAGA,IAAMI,wBAAwB;AAAA,uEAAC,kBAAOC,kBAAP;AAAA;AAAA;AAAA;AAAA;AAAA,8CACrBN,gBAAgB,CAACG,IAAjB,CAAsB,iCAAtB,EAAwD;AAACG,cAAAA,kBAAkB,EAACA;AAApB,aAAxD,CADqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA,kBAAxBD,wBAAwB;AAAA;AAAA;AAAA,GAA9B;;AAGA,SAASJ,kBAAT,EAA6BI,wBAA7B","sourcesContent":["import axiosApiInstance from '../interceptor/interceptor'\r\n// send ref token and get new token\r\nconst refreshAccessToken=async (token)=>{\r\n   return axiosApiInstance.post(\"/token/getRefreshAccessToken\",{ref_token:token})\r\n}\r\nconst deleteRefrechTokenOldOne=async (RefreshAccessToken)=>{\r\n   return axiosApiInstance.post(\"/token/deleteRefrechTokenOldOne\",{RefreshAccessToken:RefreshAccessToken})\r\n}\r\nexport { refreshAccessToken ,deleteRefrechTokenOldOne}"]},"metadata":{},"sourceType":"module"}