{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"F:/AHKI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport Styles from './postUsersStorys.module.scss';\nimport LanguageContext from '../../context/languageContext';\nimport userContext from '../../context/userContext';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Picker, Emoji } from 'emoji-mart';\nimport { postnrmltopic } from '../../services/post';\nimport SwitchCom from '../switch/switchCom';\nimport { useRouter } from 'next/router';\nimport ReactPlayer from 'react-player';\nimport Image from 'next/image';\n\nvar PostTodayTopic = function PostTodayTopic(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      imageOrVideo = _React$useState2[0],\n      setImageOrVideo = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      imageOrVideoDataToSend = _React$useState4[0],\n      setImageOrVideoDataToSend = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      mask = _React$useState6[0],\n      setMask = _React$useState6[1];\n\n  var _React$useContext = React.useContext(LanguageContext),\n      _React$useContext2 = _slicedToArray(_React$useContext, 2),\n      language = _React$useContext2[0],\n      setLanguage = _React$useContext2[1];\n\n  var _React$useContext3 = React.useContext(userContext),\n      _React$useContext4 = _slicedToArray(_React$useContext3, 2),\n      user = _React$useContext4[0],\n      setUser = _React$useContext4[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      closeOrOpenEmojiPickerState = _React$useState8[0],\n      setcloseOrOpenEmojiPickerState = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      textAreaData = _React$useState10[0],\n      setTextAreaData = _React$useState10[1];\n\n  var _React$useState11 = React.useState(0),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      countLettres = _React$useState12[0],\n      setCountLettres = _React$useState12[1];\n\n  var _React$useState13 = React.useState(9),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      EmojiContainerHeight = _React$useState14[0],\n      setEmojiContainerHeight = _React$useState14[1]; //responsive handler\n\n\n  var _React$useState15 = React.useState(false),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      enableCommentAnnonymState = _React$useState16[0],\n      setEnableCommentAnnonymState = _React$useState16[1];\n\n  var router = useRouter();\n\n  var PublishPost = function PublishPost() {\n    var formData = new FormData();\n    formData.append(\"postText\", textAreaData);\n\n    if (imageOrVideo != false) {\n      formData.append(\"postImage\", imageOrVideoDataToSend);\n    }\n\n    formData.append(\"anonyme\", mask);\n    formData.append(\"allowAnonymeComments\", enableCommentAnnonymState);\n    postnrmltopic(formData, user.token).then(function (result) {\n      setTextAreaData(\"\");\n      setImageOrVideo(false);\n\n      if (router.pathname != \"/\") {\n        props.refrechData();\n      }\n    })[\"catch\"](function (error) {\n      alert(error);\n    });\n  };\n\n  React.useEffect(function () {\n    if (window.innerWidth > 500) {\n      setEmojiContainerHeight(9);\n    } else {\n      setEmojiContainerHeight(8);\n    }\n  }, []);\n  /****************************************/\n\n  /**********save image in var ************/\n\n  /****************************************/\n\n  var changeFile = function changeFile(e) {\n    if (e.target.files[0] != undefined) {\n      setImageOrVideoDataToSend(e.target.files[0]);\n\n      if (e.target.files[0].type == \"video/mp4\") {\n        setImageOrVideo({\n          type: \"video\",\n          data: URL.createObjectURL(e.target.files[0])\n        });\n      } else {\n        setImageOrVideo({\n          type: \"image\",\n          data: URL.createObjectURL(e.target.files[0])\n        });\n      }\n    }\n  };\n  /****************************************/\n\n  /************remove image****************/\n\n  /****************************************/\n\n\n  var removeImage = function removeImage() {\n    setImageOrVideoDataToSend(false);\n    setImageOrVideo(false);\n  };\n  /******************************************************/\n\n  /********when mask on user post annonymosly************/\n\n  /******************************************************/\n\n  /*************************************************************/\n\n  /****************if mask on it will turn into blue************/\n\n  /*************************************************************/\n\n\n  var closeOrOpenEmojiPicker = function closeOrOpenEmojiPicker() {\n    setcloseOrOpenEmojiPickerState(function (e) {\n      return !e;\n    });\n  };\n\n  var textAreaHolder = function textAreaHolder(e) {\n    e.target.style.height = \"16px\";\n    e.target.style.height = e.target.scrollHeight + \"px\";\n    setTextAreaData(function (el) {\n      if (el.length <= 1000) {\n        return e.target.value;\n      } else {\n        return el.slice(0, 1000);\n      }\n    });\n  };\n\n  var addEmoji = function addEmoji(e) {\n    var sym = e.unified.split('-');\n    var codesArray = [];\n    sym.forEach(function (el) {\n      return codesArray.push('0x' + el);\n    });\n    var emoji = String.fromCodePoint.apply(String, codesArray);\n    setTextAreaData(function (el) {\n      if (el.length <= 1000) {\n        return el + emoji;\n      } else {\n        return el.slice(0, 1000);\n      }\n    });\n  };\n\n  React.useEffect(function () {\n    setCountLettres(textAreaData.length);\n  }, [textAreaData]);\n\n  var _changestateOfCommentAnnonym = function changestateOfCommentAnnonym(state) {\n    setEnableCommentAnnonymState(state);\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: Styles.container,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: Styles.header,\n      children: [/*#__PURE__*/_jsxs(\"h1\", {\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: \"Annonym Comments \\u27A8 \"\n        }), \"you can lette you follower describe theme self free by  letting them comment annonymly\"]\n      }), /*#__PURE__*/_jsx(SwitchCom, {\n        changestateOfCommentAnnonym: function changestateOfCommentAnnonym(e) {\n          return _changestateOfCommentAnnonym(e);\n        },\n        state: enableCommentAnnonymState\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: Styles.userTopicContainer,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: Styles.userImage,\n        children: /*#__PURE__*/_jsx(\"img\", {\n          src: user.currentImageUrl || \"/avatar.png\"\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: Styles.postTopic,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: Styles.textAreaContainer,\n          children: [/*#__PURE__*/_jsx(\"textarea\", {\n            placeholder: \"say somthing\",\n            onChange: function onChange(e) {\n              return textAreaHolder(e);\n            },\n            value: textAreaData,\n            className: Styles.textArea\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: Styles.countLettres,\n            children: [/*#__PURE__*/_jsxs(\"span\", {\n              className: Styles.countLettresCss,\n              style: countLettres >= 1000 ? {\n                color: \"red\"\n              } : {},\n              children: [countLettres, \" : 1000\"]\n            }), /*#__PURE__*/_jsx(\"span\", {\n              className: Styles.postText,\n              onClick: function onClick() {\n                return PublishPost();\n              },\n              children: /*#__PURE__*/_jsx(SentSvg, {})\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: Styles.maskEmojiAndUploadImageContainer,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: Styles.openOrCloseEmojiPicker,\n            onClick: function onClick() {\n              return closeOrOpenEmojiPicker();\n            },\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: Styles.emojiLogo,\n              children: /*#__PURE__*/_jsx(Emoji, {\n                emoji: {\n                  id: 'smiling_face_with_3_hearts',\n                  skin: 3\n                },\n                size: 16\n              })\n            }), closeOrOpenEmojiPickerState && /*#__PURE__*/_jsx(\"div\", {\n              className: Styles.emojiPickerContainer,\n              children: /*#__PURE__*/_jsx(Picker, {\n                perLine: EmojiContainerHeight,\n                onSelect: function onSelect(e) {\n                  return addEmoji(e);\n                }\n              })\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: Styles.uploadImage,\n            hovertextinputfile: language.Uploadphotowithyourpost,\n            children: [/*#__PURE__*/_jsx(\"input\", {\n              onChange: function onChange(e) {\n                return changeFile(e);\n              },\n              type: \"file\"\n            }), /*#__PURE__*/_jsx(Image, {\n              src: \"/svgicons/camera.svg\",\n              height: 30,\n              width: 30\n            })]\n          })]\n        })]\n      })]\n    }), imageOrVideo != false && /*#__PURE__*/_jsxs(\"div\", {\n      style: imageOrVideo.type != \"image\" ? {\n        width: \"100%\"\n      } : {},\n      className: Styles.image_video_Container,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: Styles.closeBtn,\n        onClick: function onClick() {\n          return removeImage();\n        }\n      }), imageOrVideo.type == \"image\" ? /*#__PURE__*/_jsx(\"img\", {\n        src: imageOrVideo.data\n      }) : /*#__PURE__*/_jsx(ReactPlayer, {\n        width: \"100%\",\n        height: \"100%\",\n        controls: true,\n        url: imageOrVideo.data\n      })]\n    })]\n  });\n};\n\nexport default PostTodayTopic;\n\nvar SentSvg = function SentSvg() {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 64 64\",\n    children: /*#__PURE__*/_jsxs(\"g\", {\n      id: \"Layer_95\",\n      \"data-name\": \"Layer 95\",\n      children: [/*#__PURE__*/_jsx(\"path\", {\n        d: \"M53.06,10.94a1.5,1.5,0,0,0-1.53-.36l-40,13.33a1.51,1.51,0,0,0-.06,2.83l18.7,7.09,7.09,18.7a1.51,1.51,0,0,0,1.44,1,1.49,1.49,0,0,0,1.39-1l13.33-40A1.5,1.5,0,0,0,53.06,10.94Z\"\n      }), /*#__PURE__*/_jsx(\"path\", {\n        d: \"M20.22,35.48a1.5,1.5,0,0,0-2.12-2.12l-4.48,4.48a1.51,1.51,0,0,0,0,2.12,1.49,1.49,0,0,0,2.12,0Z\"\n      }), /*#__PURE__*/_jsx(\"path\", {\n        d: \"M23.88,40.12a1.49,1.49,0,0,0-2.12,0L16.08,45.8a1.5,1.5,0,0,0,2.12,2.12l5.68-5.68A1.49,1.49,0,0,0,23.88,40.12Z\"\n      }), /*#__PURE__*/_jsx(\"path\", {\n        d: \"M28.52,43.78,24,48.26a1.5,1.5,0,0,0,2.12,2.12l4.48-4.48A1.5,1.5,0,0,0,28.52,43.78Z\"\n      })]\n    })\n  });\n};","map":null,"metadata":{},"sourceType":"module"}