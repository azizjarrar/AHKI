{"ast":null,"code":"import _regeneratorRuntime from \"F:/AHKI/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:/AHKI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { refreshAccessToken, deleteRefrechTokenOldOne } from '../services/refreshAccessToken';\nvar axiosApiInstance = axios.create({\n  //baseURL: 'http://127.0.0.1:5010/',\n  baseURL: 'http://46.101.169.142:5010/',\n  withCredentials: true\n});\naxiosApiInstance.defaults.withCredentials = true; //axiosApiInstance.defaults.baseURL = 'http://127.0.0.1:5010/' // set default url\n\naxiosApiInstance.interceptors.request.use( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(config) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", config);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), function (error) {\n  Promise.reject(error);\n});\naxiosApiInstance.interceptors.response.use(function (response) {\n  return response;\n}, /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(error) {\n    var originalRequest, access_token;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(error);\n            originalRequest = error.config;\n\n            if (!(error.message == \"Network Error\")) {\n              _context2.next = 5;\n              break;\n            }\n\n            // localStorage.removeItem('ref_token');\n            // await axios.post(\"api/logout\") // change token in cookies to the bew one\n            alert(error.message); //location.reload();\n\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            if (!(error.response.status === 401)) {\n              _context2.next = 11;\n              break;\n            }\n\n            localStorage.removeItem('ref_token');\n            _context2.next = 9;\n            return axios.post(\"api/logout\");\n\n          case 9:\n            // change token in cookies to the bew one\n            window.reload();\n            return _context2.abrupt(\"return\");\n\n          case 11:\n            if (!(error.response.status === 404)) {\n              _context2.next = 13;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 13:\n            if (!(error.response.status === 403 && !originalRequest._retry)) {\n              _context2.next = 24;\n              break;\n            }\n\n            originalRequest._retry = true;\n            _context2.next = 17;\n            return refreshAccessToken(localStorage.getItem(\"ref_token\"));\n\n          case 17:\n            access_token = _context2.sent;\n            deleteRefrechTokenOldOne(localStorage.getItem(\"ref_token\")); // send the ref token and get new token\n\n            originalRequest.headers.Authorization = 'Bearer ' + access_token.data.token;\n            _context2.next = 22;\n            return axios.post(\"api/setToken\", {\n              token: access_token.data.token\n            });\n\n          case 22:\n            // change token in cookies to the bew one\n            localStorage.setItem(\"ref_token\", access_token.data.ref_token); // save the new ref_token\n\n            return _context2.abrupt(\"return\", axiosApiInstance(originalRequest));\n\n          case 24:\n            return _context2.abrupt(\"return\", Promise.reject(error));\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport default axiosApiInstance;","map":null,"metadata":{},"sourceType":"module"}