{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport '../styles/globals.scss';\nimport React from 'react';\nimport initLanguage from '../components/initLanguage/initLanguage';\nimport { GetUserData } from '../services/user';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport UserContext from '../context/userContext';\nimport LanguageContext from '../context/languageContext';\nimport SocketContext from '../context/socketContext';\nimport ApiIsLoadingContext from '../context/apiIsLoadingContext';\nimport { useRouter } from 'next/router';\nimport io from 'socket.io-client';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const [user, setUser] = React.useState({\n    image: \"\",\n    tel: \"\",\n    biography: \"\",\n    userName: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    age: \"\",\n    following: 0,\n    followers: 0\n  });\n  const userProvider = React.useMemo(() => (({\n    user,\n    setUser\n  }), [user, setUser]));\n  /********************************************************************/\n\n  const [language, setLanguage] = React.useState(_objectSpread({}, initLanguage(\"eng\")));\n  const languageProvider = React.useMemo(() => (({\n    language,\n    setLanguage\n  }), [language, setLanguage]));\n  /********************************************************************/\n\n  const [isLoading, setIsLoading] = React.useState(false);\n  const loadingProvider = React.useMemo(() => (({\n    isLoading,\n    setIsLoading\n  }), [isLoading, setIsLoading]));\n  /********************************************************************/\n\n  const [socket, setSocket] = React.useState(undefined);\n  const socketProvider = React.useMemo(() => (({\n    socket,\n    setSocket\n  }), [socket, setSocket]));\n  /*****************************************************************/\n\n  const [onlyOnce, setonlyOnce] = React.useState(false);\n  const router = useRouter();\n  const socketRef = React.useRef();\n  /*socket io*/\n\n  /************************************/\n\n  if (router.query.refrech == \"true\" && onlyOnce == false) {\n    setonlyOnce(true);\n    GetUserData(pageProps.token).then(data => {\n      setUser(e => {\n        return _objectSpread(_objectSpread(_objectSpread({}, e), data.data.data[0]), {}, {\n          token: pageProps.token\n        });\n      });\n    }).catch(e => {});\n  }\n\n  React.useEffect(() => {\n    /*****************init Token to userProvider******************/\n    setUser(e => {\n      return _objectSpread(_objectSpread({}, e), {}, {\n        token: pageProps.token\n      });\n    });\n    /*get current lang */\n\n    setLanguage(initLanguage(localStorage.getItem('language') || \"eng\"));\n    /***********************************************************/\n\n    /********************fetch user data online if there is token************************/\n\n    /***********************************************************/\n\n    if (pageProps.token) {\n      GetUserData(pageProps.token).then(data => {\n        socketRef.current = io(\"http://46.101.169.142:5010\");\n        socketRef.current.on(\"getSocketid\", dataFromSocket => {\n          socketRef.current.emit(\"saveuserOnline\", {\n            userid: data.data.data[0]._id,\n            socketid: dataFromSocket\n          });\n          setSocket(socketRef.current);\n        });\n        setUser(e => {\n          return _objectSpread(_objectSpread({}, e), data.data.data[0]);\n        });\n      }).catch(e => {});\n    }\n  }, [router.query.refrech]);\n  /******************************************************************************************\r\n   *******************************************************************************************\r\n   ******************************************************************************************/\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: \"appWrapper\",\n      children: /*#__PURE__*/_jsx(LanguageContext.Provider, {\n        value: languageProvider,\n        children: /*#__PURE__*/_jsx(UserContext.Provider, {\n          value: userProvider,\n          children: /*#__PURE__*/_jsx(ApiIsLoadingContext.Provider, {\n            value: loadingProvider,\n            children: /*#__PURE__*/_jsxs(SocketContext.Provider, {\n              value: socketProvider,\n              children: [isLoading && /*#__PURE__*/_jsx(\"div\", {\n                className: \"loading\",\n                children: /*#__PURE__*/_jsx(LinearProgress, {})\n              }), /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))]\n            })\n          })\n        })\n      })\n    })\n  });\n}\n\nexport default MyApp;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  return (await req.cookies.token) ? {\n    props: {\n      token: true\n    }\n  } : {\n    redirect: {\n      destination: '/',\n      permanent: false\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}