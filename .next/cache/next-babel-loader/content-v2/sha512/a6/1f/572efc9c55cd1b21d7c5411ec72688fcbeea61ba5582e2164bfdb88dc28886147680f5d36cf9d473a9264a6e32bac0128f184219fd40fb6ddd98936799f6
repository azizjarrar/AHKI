{"ast":null,"code":"import axios from 'axios';\nimport { refreshAccessToken, deleteRefrechTokenOldOne } from '../services/refreshAccessToken';\nconst axiosApiInstance = axios.create({\n  baseURL: 'http://46.101.169.142:5010/',\n  //baseURL: 'http://127.0.0.1:5010/',\n  withCredentials: true\n});\naxiosApiInstance.defaults.withCredentials = true; //axiosApiInstance.defaults.baseURL = 'http://127.0.0.1:5010/' // set default url\n\naxiosApiInstance.interceptors.request.use(async config => {\n  return config;\n}, error => {\n  Promise.reject(error);\n});\naxiosApiInstance.interceptors.response.use(response => {\n  return response;\n}, async function (error) {\n  console.log(error);\n  const originalRequest = error.config;\n\n  if (error.message == \"Network Error\") {\n    // localStorage.removeItem('ref_token');\n    // await axios.post(\"api/logout\") // change token in cookies to the bew one\n    alert(error.message); //location.reload();\n\n    return;\n  }\n\n  if (error.response.status === 401) {\n    localStorage.removeItem('ref_token');\n    await axios.post(\"api/logout\"); // change token in cookies to the bew one\n\n    window.reload();\n    return;\n  }\n\n  if (error.response.status === 404) {\n    return;\n  }\n\n  if (error.response.status === 403 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    const access_token = await refreshAccessToken(localStorage.getItem(\"ref_token\"));\n    deleteRefrechTokenOldOne(localStorage.getItem(\"ref_token\")); // send the ref token and get new token\n\n    originalRequest.headers.Authorization = 'Bearer ' + access_token.data.token;\n    await axios.post(\"api/setToken\", {\n      token: access_token.data.token\n    }); // change token in cookies to the bew one\n\n    localStorage.setItem(\"ref_token\", access_token.data.ref_token); // save the new ref_token\n\n    return axiosApiInstance(originalRequest); // return new  request with the new token\n  }\n\n  return Promise.reject(error);\n});\nexport default axiosApiInstance;","map":null,"metadata":{},"sourceType":"module"}