{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\AHKI\\\\components\\\\comment\\\\comment.js\";\nimport React from 'react';\nimport Styles from './comment.module.scss';\nimport HeartComment from '../heartComment/heartComment';\nimport ShowLikesUserNames from '../showLikesUserNames/showLikesUserNames';\nimport { deleteComment } from '../../services/postComments';\nimport { deleteCommentFromImage } from '../../services/imageComments';\nimport { countImageCommentsLikes } from '../../services/imageLikes';\nimport { countPostCommentsLikes } from '../../services/post_likes';\n\nconst Comment = props => {\n  const [settings, setSettings] = React.useState({\n    state: false,\n    firstClick: false\n  });\n  const [likesModal, setLikesModal] = React.useState(false);\n  const [likesNumber, setLikesNumber] = React.useState(0);\n  /******************************************************************************************\r\n  *on click on the 3 dots will show settings like delete or report \r\n  ******************************************************************************************/\n\n  React.useEffect(() => {\n    if (props.imgid != undefined) {\n      countImageCommentsLikes({\n        commentid: props.commentid\n      }, props.token).then(result => {\n        setLikesNumber(result.data.count);\n      }).catch(error => {\n        alert(error);\n      });\n    } else {\n      countPostCommentsLikes({\n        commentid: props.commentid\n      }, props.token).then(result => {\n        setLikesNumber(result.data.count);\n      }).catch(error => {\n        alert(error);\n      });\n    }\n  }, []); //add like in time to likes number\n\n  const addLikeInTime = newLikesNumber => {\n    setLikesNumber(e => e + newLikesNumber);\n  }; // show users who likes this comment\n\n\n  const openshowLikesUserNames = () => {\n    setLikesModal(e => !e);\n  }; // show settings of comment report delete\n\n\n  const ShowSettings = () => {\n    if (settings.firstClick != true) {\n      setSettings({\n        state: true,\n        firstClick: true\n      });\n    }\n  }; // close setting componenet\n\n\n  const closeComponenet = () => {\n    setSettings({\n      state: false,\n      firstClick: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.container,\n    style: likesModal == true || settings.state == true ? {\n      zIndex: \"999999999999999999\"\n    } : {},\n    children: [likesModal && /*#__PURE__*/_jsxDEV(ShowLikesUserNames, {\n      imgid: props.imgid,\n      showLikesForComment: true,\n      closepopUp: openshowLikesUserNames,\n      commentid: props.commentid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.imageUserAndNameContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.userImage,\n        children: props.userProfileImageUrl != \"anonym\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.userProfileImageUrl || \"/avatar.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 51\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            minHeight: \"0\",\n            width: \"75%\",\n            height: \"75%\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%,-50%)\"\n          },\n          src: \"/anonymous.png\",\n          alt: \"anonymous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 108\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: Styles.date,\n        children: [props.date.slice(0, 10), \" \", props.date.slice(11, 16)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.Settings,\n        style: settings.state ? {\n          zIndex: \"999999999999999999\"\n        } : {\n          zIndex: \"1\"\n        },\n        onClick: () => ShowSettings(),\n        children: [\"\\u2026\", settings.state && /*#__PURE__*/_jsxDEV(SettingsPComments, {\n          ownerid: props.ownerid,\n          currentUserId: props.currentUserId,\n          deleteCommentInCurrentTime: props.deleteCommentInCurrentTime,\n          postid: props.postid,\n          token: props.token,\n          closeComponenetfn: closeComponenet,\n          imgid: props.imgid,\n          commentid: props.commentid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 168\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.comments,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.likesAndComments,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.likes,\n        children: [/*#__PURE__*/_jsxDEV(HeartComment, {\n          imgid: props.imgid,\n          addLikeInTime: e => addLikeInTime(e),\n          token: props.token,\n          commentid: props.commentid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: Styles.likesNumber,\n          onClick: () => openshowLikesUserNames(),\n          children: likesNumber || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Styles.Comments,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Comment;\n\nconst SettingsPComments = props => {\n  const [errorMessage, setErrorMessage] = React.useState({\n    state: false,\n    text: \"\"\n  }); // when state true show  pop up \n  //delete comment there is 2 comment of image and comment of image\n\n  const deleteCommentFn = () => {\n    //if there is img then it will open setting of img comments\n    if (props.imgid != undefined) {\n      deleteCommentFromImage({\n        imgid: props.imgid,\n        commentid: props.commentid\n      }, props.token).then(result => {\n        props.deleteCommentInCurrentTime(props.commentid);\n      }); // else it will  post comment\n    } else {\n      deleteComment({\n        postid: props.postid,\n        commentid: props.commentid\n      }, props.token).then(result => {\n        props.deleteCommentInCurrentTime(props.commentid);\n      });\n    }\n  }; // close error modal\n\n\n  const closePopUp = () => {\n    setErrorMessage({\n      state: false,\n      text: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Styles.containerSettings,\n    children: [errorMessage.state == true && /*#__PURE__*/_jsxDEV(PopUpMessage, {\n      fnclose: () => closePopUp(),\n      openPopUp: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.paramsContainer,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }, this), props.ownerid._id == props.currentUserId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.paramsContainer,\n      onClick: () => deleteCommentFn(),\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 128\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 56\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Styles.paramsContainer,\n      onClick: () => props.closeComponenetfn(),\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 95\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 11\n  }, this);\n};","map":{"version":3,"sources":["F:/AHKI/components/comment/comment.js"],"names":["React","Styles","HeartComment","ShowLikesUserNames","deleteComment","deleteCommentFromImage","countImageCommentsLikes","countPostCommentsLikes","Comment","props","settings","setSettings","useState","state","firstClick","likesModal","setLikesModal","likesNumber","setLikesNumber","useEffect","imgid","undefined","commentid","token","then","result","data","count","catch","error","alert","addLikeInTime","newLikesNumber","e","openshowLikesUserNames","ShowSettings","closeComponenet","container","zIndex","imageUserAndNameContainer","userImage","userProfileImageUrl","minHeight","width","height","top","left","transform","name","date","slice","Settings","ownerid","currentUserId","deleteCommentInCurrentTime","postid","comments","text","likesAndComments","likes","Comments","SettingsPComments","errorMessage","setErrorMessage","deleteCommentFn","closePopUp","containerSettings","paramsContainer","_id","closeComponenetfn"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Styles from './comment.module.scss'\r\nimport HeartComment from '../heartComment/heartComment'\r\nimport ShowLikesUserNames from '../showLikesUserNames/showLikesUserNames'\r\nimport {deleteComment} from '../../services/postComments'\r\nimport {deleteCommentFromImage} from '../../services/imageComments'\r\nimport {countImageCommentsLikes}  from '../../services/imageLikes'\r\nimport {countPostCommentsLikes}  from '../../services/post_likes'\r\nconst Comment = (props) => {\r\n  const [settings, setSettings] = React.useState({state:false,firstClick:false})\r\n  const [likesModal,setLikesModal]=React.useState(false)\r\n  const [likesNumber,setLikesNumber]=React.useState(0)\r\n  /******************************************************************************************\r\n  *on click on the 3 dots will show settings like delete or report \r\n  ******************************************************************************************/\r\n  React.useEffect(()=>{\r\n    if(props.imgid!=undefined){\r\n      countImageCommentsLikes({commentid:props.commentid},props.token).then(result=>{\r\n        setLikesNumber(result.data.count)\r\n      }).catch(error=>{\r\n        alert(error)\r\n      })\r\n    }else{\r\n     \r\n        countPostCommentsLikes({commentid:props.commentid},props.token).then(result=>{\r\n          setLikesNumber(result.data.count)\r\n        }).catch(error=>{\r\n          alert(error)\r\n        })\r\n      \r\n \r\n    }\r\n  },[])\r\n\r\n //add like in time to likes number\r\n  const addLikeInTime=(newLikesNumber)=>{\r\n    setLikesNumber(e=>e+newLikesNumber)\r\n  }\r\n  // show users who likes this comment\r\n  const openshowLikesUserNames=()=>{\r\n    setLikesModal(e=>!e)\r\n  }\r\n  // show settings of comment report delete\r\n  const ShowSettings = () => {\r\n    if(settings.firstClick!=true){\r\n      setSettings({state:true,firstClick:true})\r\n    }\r\n}\r\n// close setting componenet\r\nconst closeComponenet=()=>{\r\n  setSettings({state:false,firstClick:false})\r\n\r\n}\r\n  return (\r\n    <div className={Styles.container}  style={likesModal==true||settings.state==true?{zIndex:\"999999999999999999\"}:{}}>\r\n      {likesModal&&<ShowLikesUserNames imgid={props.imgid} showLikesForComment={true} closepopUp={openshowLikesUserNames} commentid={props.commentid}></ShowLikesUserNames>}\r\n      <div className={Styles.imageUserAndNameContainer}>\r\n        <div className={Styles.userImage}>\r\n        {/*<img src={props.userProfileImageUrl||\"/avatar.png\"} alt={\"user.userName \"|| \"\"}/>*/}\r\n\r\n            {props.userProfileImageUrl!=\"anonym\"? <img src={props.userProfileImageUrl || \"/avatar.png\"} />:<img style={{minHeight:\"0\",width:\"75%\",height:\"75%\",top:\"50%\",left:\"50%\",transform:\"translate(-50%,-50%)\"}} src={\"/anonymous.png\"} alt=\"anonymous\"/>}\r\n          </div>\r\n          <h3>{props.name}</h3> \r\n          <h3 className={Styles.date}>{props.date.slice(0,10)} {props.date.slice(11,16)}</h3>\r\n          <div className={Styles.Settings} style={settings.state?{zIndex:\"999999999999999999\"}:{zIndex:\"1\"}} onClick={() => ShowSettings()}>&hellip;{settings.state && <SettingsPComments ownerid={props.ownerid} currentUserId={props.currentUserId} deleteCommentInCurrentTime={props.deleteCommentInCurrentTime} postid={props.postid}  token={props.token} closeComponenetfn={closeComponenet}  imgid={props.imgid} commentid={props.commentid}></SettingsPComments>}</div></div>\r\n          <div className={Styles.comments}><p>{props.text}</p></div>\r\n          <div className={Styles.likesAndComments}>\r\n          <div className={Styles.likes} >\r\n          <HeartComment imgid={props.imgid}  addLikeInTime={(e)=>addLikeInTime(e)} token={props.token} commentid={props.commentid}></HeartComment>\r\n          <p className={Styles.likesNumber} onClick={()=>openshowLikesUserNames()}>{likesNumber||0}</p>\r\n\r\n          </div>\r\n        {<div className={Styles.Comments} ><p></p></div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Comment\r\n\r\nconst SettingsPComments=(props)=>{\r\n  const [errorMessage,setErrorMessage]=React.useState({state:false,text:\"\"})// when state true show  pop up \r\n//delete comment there is 2 comment of image and comment of image\r\n const deleteCommentFn=()=>{\r\n   //if there is img then it will open setting of img comments\r\n  if(props.imgid!=undefined){\r\n    deleteCommentFromImage({imgid:props.imgid,commentid:props.commentid},props.token).then(result=>{\r\n      props.deleteCommentInCurrentTime(props.commentid)\r\n    })\r\n    // else it will  post comment\r\n  }else{\r\n    deleteComment({postid:props.postid,commentid:props.commentid},props.token).then(result=>{\r\n      props.deleteCommentInCurrentTime(props.commentid)\r\n    })\r\n  }\r\n  }\r\n  // close error modal\r\n  const closePopUp=()=>{\r\n      setErrorMessage({state:false,text:\"\"})\r\n    }\r\n  return (\r\n          <div className={Styles.containerSettings}>\r\n              {errorMessage.state==true&&<PopUpMessage fnclose={()=>closePopUp()} openPopUp={errorMessage}></PopUpMessage>}\r\n              <div className={Styles.paramsContainer}><h3>Report</h3></div>\r\n              {props.ownerid._id==props.currentUserId&&<div className={Styles.paramsContainer} onClick={()=>deleteCommentFn()}><h3>Delete</h3></div>}\r\n              <div className={Styles.paramsContainer} onClick={()=>props.closeComponenetfn()}><h3>Close</h3></div>\r\n          </div>\r\n          )\r\n}"]},"metadata":{},"sourceType":"module"}