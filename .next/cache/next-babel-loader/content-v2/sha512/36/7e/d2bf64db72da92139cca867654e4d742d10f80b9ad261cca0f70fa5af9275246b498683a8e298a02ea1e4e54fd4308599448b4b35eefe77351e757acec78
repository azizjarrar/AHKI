{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _toConsumableArray from \"F:/AHKI/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"F:/AHKI/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:/AHKI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Style from './biggerImagewithcomments.module.scss';\nimport { getImageData } from '../../services/images';\nimport Heart from '../../components/heart/heart';\nimport userContext from '../../context/userContext';\nimport { Picker, Emoji } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport LanguageContext from '../../context/languageContext';\nimport { addCommentToImage, getCommentsImage, countComments } from '../../services/imageComments';\nimport { countImageLikes } from '../../services/imageLikes';\nimport { deleteImage } from '../../services/images';\nimport Comment from '../comment/comment';\nimport ShowLikesUserNames from '../showLikesUserNames/showLikesUserNames';\nimport PopUpMessage from '../../components/popUpMessage/popUpMessage';\n\nvar biggerImagewithcomments = function biggerImagewithcomments(props) {\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentimage = _React$useState2[0],\n      setCurrentimage = _React$useState2[1]; // has the data of the current image\n\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      nextimage = _React$useState4[0],\n      setNextimage = _React$useState4[1]; // has id of next image\n\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      previmage = _React$useState6[0],\n      setPrevimage = _React$useState6[1]; //has id fo prev image\n\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      comments = _React$useState8[0],\n      setComments = _React$useState8[1]; //open or close comments\n\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      imageLoading = _React$useState10[0],\n      setimageLoading = _React$useState10[1];\n\n  var _React$useState11 = React.useState(0),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      likesNumber = _React$useState12[0],\n      setLikesNumber = _React$useState12[1];\n\n  var _React$useState13 = React.useState(0),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      coummentNumber = _React$useState14[0],\n      setCoummentNumber = _React$useState14[1];\n\n  var _React$useState15 = React.useState({\n    userData: {\n      currentImageUrl: \"\",\n      userName: \"\"\n    }\n  }),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      setOwnerOfImageData = _React$useState16[0],\n      setSetOwnerOfImageData = _React$useState16[1];\n\n  var _React$useContext = React.useContext(userContext),\n      _React$useContext2 = _slicedToArray(_React$useContext, 2),\n      user = _React$useContext2[0],\n      setUser = _React$useContext2[1]; //user data\n\n\n  var _React$useState17 = React.useState(\"\"),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      textAreaData = _React$useState18[0],\n      setTextAreaData = _React$useState18[1]; // text area for add comment\n\n\n  var _React$useState19 = React.useState(0),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      countLettres = _React$useState20[0],\n      setCountLettres = _React$useState20[1]; // count how many lettre in text area\n\n\n  var _React$useState21 = React.useState(false),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      closeOrOpenEmojiPickerState = _React$useState22[0],\n      setcloseOrOpenEmojiPickerState = _React$useState22[1]; //emoji handler\n\n\n  var _React$useContext3 = React.useContext(LanguageContext),\n      _React$useContext4 = _slicedToArray(_React$useContext3, 2),\n      language = _React$useContext4[0],\n      setLanguage = _React$useContext4[1];\n\n  var _React$useState23 = React.useState(0),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      skip = _React$useState24[0],\n      setSkip = _React$useState24[1]; //fetch data with skip\n\n\n  var _React$useState25 = React.useState([]),\n      _React$useState26 = _slicedToArray(_React$useState25, 2),\n      commentsData = _React$useState26[0],\n      setCommentsData = _React$useState26[1]; //comments Container\n\n\n  var _React$useState27 = React.useState(0),\n      _React$useState28 = _slicedToArray(_React$useState27, 2),\n      addsOneToCommentCount = _React$useState28[0],\n      setaddOneToCommentCount = _React$useState28[1]; //when add comment automaticly add + to old one\n\n\n  var _React$useState29 = React.useState(false),\n      _React$useState30 = _slicedToArray(_React$useState29, 2),\n      moreComments = _React$useState30[0],\n      setMoreComments = _React$useState30[1]; //show more comment fetch  with 3 by 3\n\n\n  var _React$useState31 = React.useState(false),\n      _React$useState32 = _slicedToArray(_React$useState31, 2),\n      likesModal = _React$useState32[0],\n      setLikesModal = _React$useState32[1]; // show modal has all the name of who put like\n\n\n  var _React$useState33 = React.useState({\n    state: false,\n    firstClick: false\n  }),\n      _React$useState34 = _slicedToArray(_React$useState33, 2),\n      settings = _React$useState34[0],\n      setSettings = _React$useState34[1]; //show settings on click on 3 dots ...\n\n  /*************************************************************/\n\n  /*********************use effects*****************************/\n\n  /*************************************************************/\n\n\n  React.useState(function () {\n    /*he i fetch cureent img data and the next and prev image id */\n    setimageLoading(true);\n    getImageData({\n      currentImgId: props.imgid,\n      userid: props.userid\n    }, props.token).then(function (result) {\n      setimageLoading(false);\n      setSetOwnerOfImageData(result.data);\n      setCurrentimage(function (e) {\n        return _objectSpread({}, result.data.currentimage);\n      });\n      setNextimage(function (e) {\n        return _objectSpread({}, result.data.nextimage);\n      });\n      setPrevimage(function (e) {\n        return _objectSpread({}, result.data.previmage);\n      });\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  }, []);\n  /*calc textArea length */\n\n  React.useEffect(function () {\n    setCountLettres(textAreaData.length);\n  }, [textAreaData]); //when i change image fetch ne data of the current image\n\n  React.useEffect(function () {\n    setCommentsData([]);\n    setSkip(0);\n    setComments(false);\n    countImageLikes({\n      imageid: currentimage._id || props.imgid\n    }, props.token).then(function (result) {\n      setLikesNumber(result.data.count);\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n\n    if (currentimage._id != undefined) {\n      getCommentsImage({\n        imageid: currentimage._id || props.imgid,\n        skip: 0\n      }, user.token).then(function (result) {\n        setComments(true);\n\n        if (result.data.data.length > 0) {\n          setMoreComments(true);\n        } else {\n          setMoreComments(false);\n        }\n\n        setCommentsData(function (e) {\n          return [].concat(_toConsumableArray(e), _toConsumableArray(result.data.data));\n        });\n      })[\"catch\"](function (error) {\n        alert(error);\n      });\n      countComments({\n        imageid: currentimage._id || props.imgid,\n        skip: 0\n      }, user.token).then(function (result) {\n        setCoummentNumber(result.data.count);\n      })[\"catch\"](function (error) {\n        alert(error);\n      });\n    }\n  }, [currentimage._id]); //hedhi kenet t3awed tfetchi\n  //when i click load more comments get 3 new comment evry time\n\n  React.useEffect(function () {\n    if (skip != 0) {\n      getCommentsImage({\n        imageid: currentimage._id || props.imgid,\n        skip: skip\n      }, user.token).then(function (result) {\n        if (result.data.data.length > 0) {\n          setMoreComments(true);\n        } else {\n          setMoreComments(false);\n        }\n\n        setCommentsData(function (e) {\n          return [].concat(_toConsumableArray(e), _toConsumableArray(result.data.data));\n        });\n      })[\"catch\"](function (error) {\n        alert(error);\n      });\n    }\n  }, [skip]);\n\n  var LoadMoreComments = function LoadMoreComments() {\n    setSkip(function (e) {\n      return e + 3;\n    });\n  };\n  /* go to prev image */\n\n\n  var goPrev = function goPrev() {\n    setimageLoading(true);\n    getImageData({\n      currentImgId: previmage._id,\n      userid: props.userid\n    }, props.token).then(function (result) {\n      setimageLoading(false);\n      setCurrentimage(function (e) {\n        return _objectSpread(_objectSpread({}, e), result.data.currentimage);\n      });\n      setNextimage(function (e) {\n        return _objectSpread({}, result.data.nextimage);\n      });\n      setPrevimage(function (e) {\n        return _objectSpread({}, result.data.previmage);\n      });\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  }; // go to next image\n\n\n  var gonext = function gonext() {\n    setimageLoading(true);\n    getImageData({\n      currentImgId: nextimage._id,\n      userid: props.userid\n    }, props.token).then(function (result) {\n      setimageLoading(false);\n      setCurrentimage(function (e) {\n        return _objectSpread(_objectSpread({}, e), result.data.currentimage);\n      });\n      setNextimage(function (e) {\n        return _objectSpread({}, result.data.nextimage);\n      });\n      setPrevimage(function (e) {\n        return _objectSpread({}, result.data.previmage);\n      });\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  };\n  /* set the height of text area and when text get bigger textarea get biiger with it */\n\n\n  var textAreaHolder = function textAreaHolder(e) {\n    e.target.style.height = \"16px\";\n    e.target.style.height = e.target.scrollHeight + \"px\"; //only take 200 char\n\n    setTextAreaData(function (el) {\n      if (el.length <= 200) {\n        return e.target.value;\n      } else {\n        return el.slice(0, 200);\n      }\n    });\n  };\n  /* close emoji comp */\n\n\n  var closeOrOpenEmojiPicker = function closeOrOpenEmojiPicker() {\n    setcloseOrOpenEmojiPickerState(function (e) {\n      return !e;\n    });\n  }; //add commnent\n\n\n  var AddComment = function AddComment() {\n    addCommentToImage({\n      imageid: currentimage._id,\n      commentText: textAreaData\n    }, user.token).then(function (result) {\n      setCommentsData(function (e) {\n        return [_objectSpread(_objectSpread({}, result.data.data), {}, {\n          commentOwner: {\n            userName: user.userName,\n            currentImageUrl: user.currentImageUrl,\n            _id: user._id\n          }\n        })].concat(_toConsumableArray(e));\n      });\n      setComments(true);\n      setaddOneToCommentCount(function (e) {\n        return e + 1;\n      });\n      setTextAreaData(\"\");\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  }; //add emojo to textarea\n\n\n  var addEmoji = function addEmoji(e) {\n    var sym = e.unified.split('-');\n    var codesArray = [];\n    sym.forEach(function (el) {\n      return codesArray.push('0x' + el);\n    });\n    var emoji = String.fromCodePoint.apply(String, codesArray);\n    setTextAreaData(function (el) {\n      if (el.length <= 200) {\n        return el + emoji;\n      } else {\n        return el.slice(0, 200);\n      }\n    });\n  }; // open or close comments\n\n\n  var openComments = function openComments() {\n    setComments(function (e) {\n      return !e;\n    });\n  }; //when you like image it will add in time to numbers of likes\n\n\n  var _addLikeInTime = function addLikeInTime(newLikesNumber) {\n    setLikesNumber(function (e) {\n      return e + newLikesNumber;\n    });\n  }; // show usernames of people who liked image\n\n\n  var openshowLikesUserNames = function openshowLikesUserNames() {\n    setLikesModal(function (e) {\n      return !e;\n    });\n  }; //show settings delete report \n\n\n  var ShowSettings = function ShowSettings() {\n    if (settings.firstClick != true) {\n      setSettings({\n        state: true,\n        firstClick: true\n      });\n    }\n  }; // close settings componnent\n\n\n  var closeComponenet = function closeComponenet() {\n    setSettings({\n      state: false,\n      firstClick: false\n    });\n  };\n\n  var deleteCommentInCurrentTimefn = function deleteCommentInCurrentTimefn(commentIdDeleted) {\n    setCommentsData(function (arrayOfComment) {\n      return _toConsumableArray(arrayOfComment.filter(function (e) {\n        return e._id != commentIdDeleted;\n      }));\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: Style.container,\n    children: [likesModal && /*#__PURE__*/_jsx(ShowLikesUserNames, {\n      closepopUp: openshowLikesUserNames,\n      imgid: currentimage._id || props.imgid\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: Style.closeBtn,\n      onClick: function onClick() {\n        return props.close();\n      }\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: Style.imageContainer,\n      children: [imageLoading && /*#__PURE__*/_jsx(\"div\", {\n        className: Style.loadingAnimation,\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: Style.ldsring,\n          children: [/*#__PURE__*/_jsx(\"div\", {}), /*#__PURE__*/_jsx(\"div\", {}), /*#__PURE__*/_jsx(\"div\", {}), /*#__PURE__*/_jsx(\"div\", {})]\n        })\n      }), /*#__PURE__*/_jsx(\"img\", {\n        src: currentimage.imageUrl || \"\"\n      }), previmage != undefined && previmage._id != undefined && /*#__PURE__*/_jsx(\"div\", {\n        className: \"\".concat(Style.SwitchImage, \" \").concat(Style.left),\n        onClick: function onClick() {\n          return goPrev();\n        },\n        children: /*#__PURE__*/_jsx(\"span\", {\n          children: \"\\u2039\"\n        })\n      }), nextimage != undefined && nextimage._id != undefined && /*#__PURE__*/_jsx(\"div\", {\n        className: \"\".concat(Style.SwitchImage, \" \").concat(Style.Right),\n        onClick: function onClick() {\n          return gonext();\n        },\n        children: /*#__PURE__*/_jsx(\"span\", {\n          children: \"\\u203A\"\n        })\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: Style.commentsContainer,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: Style.imageOwnerAndNameAndDateAndParams,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: Style.imageContainerForUserCommentsSection,\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: setOwnerOfImageData.userData.currentImageUrl\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: Style.UserNameAndDate,\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            children: setOwnerOfImageData.userData.userName\n          }), currentimage.date != undefined && /*#__PURE__*/_jsxs(\"p\", {\n            children: [currentimage.date.slice(0, 10), \" \", currentimage.date.slice(11, 16)]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: Style.Params,\n          onClick: function onClick() {\n            return ShowSettings(\"firstClick\");\n          },\n          children: [settings.state == true && /*#__PURE__*/_jsx(SettingsImage, {\n            previmage: previmage,\n            closeComponenetfn: closeComponenet,\n            userImageid: currentimage._id || props.imgid,\n            currentUserId: user._id,\n            ownerid: setOwnerOfImageData.currentimage.ImageOwner._id,\n            token: user.token\n          }), \"\\u2026\"]\n        })]\n      }), currentimage.imageText != undefined && /*#__PURE__*/_jsx(\"div\", {\n        className: Style.bio,\n        children: /*#__PURE__*/_jsx(\"p\", {\n          children: currentimage.imageText\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: Style.LikesAndCommentsContainer,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: Style.Comments,\n          onClick: function onClick() {\n            openComments();\n          },\n          children: [/*#__PURE__*/_jsx(\"svg\", {\n            width: \"69\",\n            height: \"69\",\n            viewBox: \"0 0 69 69\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsx(\"path\", {\n              d: \"M49.8333 24.6429C49.8333 11.0277 38.6807 0 24.9167 0C11.1526 0 0 11.0277 0 24.6429C0 29.9257 1.68906 34.7926 4.55208 38.8125C2.94688 43.4638 0.299479 47.1603 0.263542 47.2065C0 47.5607 -0.071875 48.0844 0.0838542 48.5464C0.239583 49.0085 0.575 49.2857 0.958333 49.2857C5.34271 49.2857 8.97239 47.3913 11.5839 45.4353C15.4411 47.8533 20.0052 49.2857 24.9167 49.2857C38.6807 49.2857 49.8333 38.258 49.8333 24.6429ZM64.4479 58.5268C67.3109 54.5223 69 49.64 69 44.3571C69 34.0533 62.5911 25.2281 53.5109 21.5471C53.6188 22.5636 53.6667 23.5955 53.6667 24.6429C53.6667 40.9533 40.7651 54.2143 24.9167 54.2143C23.6229 54.2143 22.3651 54.0911 21.1193 53.9216C24.8927 62.7777 33.7573 69 44.0833 69C48.9948 69 53.5589 67.583 57.4161 65.1496C60.0276 67.1056 63.6573 69 68.0417 69C68.425 69 68.7724 68.7074 68.9161 68.2607C69.0719 67.8141 69 67.2904 68.7365 66.9208C68.7005 66.8745 66.0531 63.1935 64.4479 58.5268Z\",\n              fill: \"#212121\"\n            })\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: Style.CommentsNumber,\n            children: coummentNumber + addsOneToCommentCount\n          }, \"unha\")]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: Style.likes,\n          children: [/*#__PURE__*/_jsx(Heart, {\n            addLikeInTime: function addLikeInTime(e) {\n              return _addLikeInTime(e);\n            },\n            imgid: currentimage._id || props.imgid,\n            token: props.token\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: Style.likesNumber,\n            onClick: function onClick() {\n              return openshowLikesUserNames();\n            },\n            children: likesNumber\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: Style.userAddComments,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: Style.userImageInComments,\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: user.currentImageUrl || \"/avatar.png\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: Style.textAreaContainer,\n          children: [/*#__PURE__*/_jsx(\"textarea\", {\n            placeholder: \"say somthing\",\n            onChange: function onChange(e) {\n              return textAreaHolder(e);\n            },\n            value: textAreaData,\n            className: Style.textArea\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: Style.countLettres,\n            children: /*#__PURE__*/_jsxs(\"span\", {\n              className: Style.countLettresCss,\n              style: countLettres >= 200 ? {\n                color: \"red\"\n              } : {},\n              children: [countLettres, \" : 200\"]\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: Style.emojiAndMaskAndPost,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: Style.openOrCloseEmojiPicker,\n            onClick: function onClick() {\n              return closeOrOpenEmojiPicker();\n            },\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: Style.emojiLogo,\n              children: /*#__PURE__*/_jsx(Emoji, {\n                emoji: {\n                  id: 'smiling_face_with_3_hearts',\n                  skin: 3\n                },\n                size: 24\n              })\n            }), closeOrOpenEmojiPickerState && /*#__PURE__*/_jsx(\"div\", {\n              className: Style.emojiPickerContainer,\n              children: /*#__PURE__*/_jsx(Picker, {\n                perLine: 8,\n                onSelect: function onSelect(e) {\n                  return addEmoji(e);\n                }\n              })\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: Style.postAndCounterContainer,\n            children: /*#__PURE__*/_jsx(\"span\", {\n              className: Style.postText,\n              onClick: function onClick() {\n                AddComment();\n              },\n              children: /*#__PURE__*/_jsx(SentSvg, {})\n            })\n          })]\n        })]\n      }), comments && /*#__PURE__*/_jsxs(\"div\", {\n        className: Style.commentsData,\n        children: [commentsData.map(function (e) {\n          return /*#__PURE__*/_jsx(Comment, {\n            currentUserId: user._id,\n            ownerid: e.commentOwner,\n            deleteCommentInCurrentTime: deleteCommentInCurrentTimefn,\n            imgid: currentimage._id || props.imgid,\n            token: user.token,\n            date: e.date,\n            commentid: e._id,\n            text: e.commentText,\n            name: e.commentOwner.userName,\n            userProfileImageUrl: e.commentOwner.currentImageUrl\n          }, e._id);\n        }), moreComments && /*#__PURE__*/_jsx(\"div\", {\n          className: Style.loadMoreComments,\n          onClick: function onClick() {\n            return LoadMoreComments();\n          },\n          children: /*#__PURE__*/_jsx(\"p\", {\n            children: \"View more comments\"\n          })\n        })]\n      })]\n    })]\n  });\n};\n\nexport default biggerImagewithcomments;\n\nvar SentSvg = function SentSvg() {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 64 64\",\n    children: /*#__PURE__*/_jsxs(\"g\", {\n      id: \"Layer_95\",\n      \"data-name\": \"Layer 95\",\n      children: [/*#__PURE__*/_jsx(\"path\", {\n        d: \"M53.06,10.94a1.5,1.5,0,0,0-1.53-.36l-40,13.33a1.51,1.51,0,0,0-.06,2.83l18.7,7.09,7.09,18.7a1.51,1.51,0,0,0,1.44,1,1.49,1.49,0,0,0,1.39-1l13.33-40A1.5,1.5,0,0,0,53.06,10.94Z\"\n      }), /*#__PURE__*/_jsx(\"path\", {\n        d: \"M20.22,35.48a1.5,1.5,0,0,0-2.12-2.12l-4.48,4.48a1.51,1.51,0,0,0,0,2.12,1.49,1.49,0,0,0,2.12,0Z\"\n      }), /*#__PURE__*/_jsx(\"path\", {\n        d: \"M23.88,40.12a1.49,1.49,0,0,0-2.12,0L16.08,45.8a1.5,1.5,0,0,0,2.12,2.12l5.68-5.68A1.49,1.49,0,0,0,23.88,40.12Z\"\n      }), /*#__PURE__*/_jsx(\"path\", {\n        d: \"M28.52,43.78,24,48.26a1.5,1.5,0,0,0,2.12,2.12l4.48-4.48A1.5,1.5,0,0,0,28.52,43.78Z\"\n      })]\n    })\n  });\n}; // this is the comp of image settings\n\n\nvar SettingsImage = function SettingsImage(props) {\n  // error handler\n  var _React$useState35 = React.useState({\n    state: false,\n    text: \"\"\n  }),\n      _React$useState36 = _slicedToArray(_React$useState35, 2),\n      errorMessage = _React$useState36[0],\n      setErrorMessage = _React$useState36[1]; // when state true show  pop up \n\n\n  var deleteImageFn = function deleteImageFn() {\n    deleteImage({\n      imageid: props.userImageid,\n      previmage: props.previmage\n    }, props.token).then(function (result) {\n      if (result.data.state == true) {\n        //if you have only one image you cant deleted\n        setErrorMessage(function (e) {\n          return _objectSpread(_objectSpread({}, e), {}, {\n            state: true,\n            text: \"you should at least have one image\"\n          });\n        });\n      } else {\n        location.reload();\n      } //location.reload();\n\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  };\n\n  var closePopUp = function closePopUp() {\n    setErrorMessage({\n      state: false,\n      text: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: Style.containerSettings,\n    children: [errorMessage.state == true && /*#__PURE__*/_jsx(PopUpMessage, {\n      fnclose: function fnclose() {\n        return closePopUp();\n      },\n      openPopUp: errorMessage\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: Style.paramsContainer,\n      children: /*#__PURE__*/_jsx(\"h3\", {\n        children: \"Report\"\n      })\n    }), props.ownerid == props.currentUserId && /*#__PURE__*/_jsx(\"div\", {\n      className: Style.paramsContainer,\n      onClick: function onClick() {\n        return deleteImageFn();\n      },\n      children: /*#__PURE__*/_jsx(\"h3\", {\n        children: \"Delete\"\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: Style.paramsContainer,\n      onClick: function onClick() {\n        return props.closeComponenetfn();\n      },\n      children: /*#__PURE__*/_jsx(\"h3\", {\n        children: \"Close\"\n      })\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}