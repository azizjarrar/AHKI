{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\AHKI\\\\components\\\\profileSettings\\\\Email\\\\Email.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Style from './Email.module.scss';\nimport Toast from '../../Toast/Toast';\nimport { updateEmailSendCode, updateEmailApi } from '../../../services/user';\nimport UserContext from '../../../context/userContext';\nimport LanguageContext from '../../../context/languageContext';\nimport Link from 'next/link';\n\nconst Email = () => {\n  const [toastMessage, setToastMessage] = React.useState({\n    state: false,\n    message: \"\"\n  });\n  const [user, setUser] = React.useContext(UserContext);\n  const [changeEamilData, setChangeEamilData] = React.useState(\"\");\n  const [language, setLanguage] = React.useContext(LanguageContext);\n  React.useEffect(() => {\n    if (toastMessage.state == true) {\n      setTimeout(() => {\n        setToastMessage({\n          state: false,\n          message: \"\"\n        });\n      }, 6000);\n    }\n  }, [toastMessage]);\n\n  const changeHandlerNewEamilAndCode = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setChangeEamilData(e => {\n      return _objectSpread(_objectSpread({}, e), {}, {\n        [name]: value\n      });\n    });\n  };\n\n  const sendCode = () => {\n    updateEmailSendCode(changeEamilData.email, user.token).then(result => {\n      setToastMessage({\n        state: true,\n        message: \"ab3eth sex\"\n      });\n    });\n  };\n\n  const updateEmail = () => {\n    updateEmailApi(changeEamilData.email, changeEamilData.code, user.token).then(result => {\n      if (result.data.typeError == \"incorectCode\") {\n        setToastMessage({\n          state: true,\n          message: \"ab3eth sex\"\n        });\n      } else if (result.data.typeError == \"codeInvalid\") {\n        setToastMessage({\n          state: true,\n          message: \"ab3eth sex\"\n        });\n      } else if (result.data.typeError == \"done\") {\n        setToastMessage({\n          state: true,\n          message: \"ab3eth sex\"\n        });\n      }\n    }).catch(error => {\n      setToastMessage({\n        state: true,\n        message: error.message\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.container,\n    children: [toastMessage.state && /*#__PURE__*/_jsxDEV(Toast, {\n      text: toastMessage.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.header,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: language.UpdateYourEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.centerInputs,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.warningText,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: language.putyournewEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.emailContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.inputContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            onChange: e => changeHandlerNewEamilAndCode(e),\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 93\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: language.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 176\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendCode(),\n          children: language.send\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 213\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.warningText,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: language.YouWillreciveconfermationCodeputithereAndClickUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => changeHandlerNewEamilAndCode(e),\n          name: \"code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: language.ConfermationCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 136\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.btn,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateEmail(),\n        children: language.update\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/profile\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: language.cancel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 124\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 102\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Email;","map":{"version":3,"sources":["F:/AHKI/components/profileSettings/Email/Email.js"],"names":["React","Style","Toast","updateEmailSendCode","updateEmailApi","UserContext","LanguageContext","Link","Email","toastMessage","setToastMessage","useState","state","message","user","setUser","useContext","changeEamilData","setChangeEamilData","language","setLanguage","useEffect","setTimeout","changeHandlerNewEamilAndCode","e","name","value","target","sendCode","email","token","then","result","updateEmail","code","data","typeError","catch","error","container","header","UpdateYourEmail","centerInputs","warningText","putyournewEmail","emailContainer","inputContainer","send","YouWillreciveconfermationCodeputithereAndClickUpdate","ConfermationCode","btn","update","cancel"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Style from './Email.module.scss'\r\nimport Toast from '../../Toast/Toast'\r\nimport {updateEmailSendCode,updateEmailApi} from '../../../services/user'\r\nimport UserContext from '../../../context/userContext'\r\nimport LanguageContext from '../../../context/languageContext'\r\nimport Link from 'next/link'\r\n\r\n\r\nconst Email = () => {\r\n    const [toastMessage,setToastMessage]=React.useState({state:false,message:\"\"})\r\n    const [user,setUser]=React.useContext(UserContext)\r\n    const [changeEamilData,setChangeEamilData]=React.useState(\"\")\r\n    const [language , setLanguage]=React.useContext(LanguageContext)\r\n\r\n\r\n    React.useEffect(()=>{\r\n     if(toastMessage.state==true){\r\n         setTimeout(() => {\r\n             setToastMessage({state:false,message:\"\"})\r\n         }, 6000);\r\n     }\r\n    },[toastMessage])\r\n    const changeHandlerNewEamilAndCode=(e)=>{\r\n        const {name,value}=e.target\r\n        setChangeEamilData(e=>{\r\n            return {...e,[name]:value}\r\n        })\r\n    }\r\n    const sendCode=()=>{\r\n        updateEmailSendCode(changeEamilData.email,user.token).then(result=>{\r\n            setToastMessage({state:true,message:\"ab3eth sex\"})\r\n        })\r\n    }\r\n    const updateEmail=()=>{\r\n        updateEmailApi(changeEamilData.email,changeEamilData.code,user.token).then(result=>{\r\n            if(result.data.typeError==\"incorectCode\"){\r\n                setToastMessage({state:true,message:\"ab3eth sex\"})\r\n            }else if(result.data.typeError==\"codeInvalid\"){\r\n                setToastMessage({state:true,message:\"ab3eth sex\"})\r\n            }else if(result.data.typeError==\"done\"){\r\n                setToastMessage({state:true,message:\"ab3eth sex\"})\r\n            }\r\n        }).catch(error=>{\r\n            setToastMessage({state:true,message:error.message})\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className={Style.container}>\r\n            {toastMessage.state&&<Toast text={toastMessage.message} ></Toast>}\r\n            <div className={Style.header}><h1>{language.UpdateYourEmail}</h1></div>\r\n            <div className={Style.centerInputs}>\r\n                <div className={Style.warningText}><h1>{language.putyournewEmail}</h1></div>\r\n                <div className={Style.emailContainer}><div className={Style.inputContainer}><input type=\"email\"  onChange={(e)=>changeHandlerNewEamilAndCode(e)} name=\"email\"/><label>{language.email}</label></div><button onClick={()=>sendCode()}>{language.send}</button></div>\r\n                <div className={Style.warningText}><h1>{language.YouWillreciveconfermationCodeputithereAndClickUpdate}</h1></div>  \r\n                <div className={Style.inputContainer}><input type=\"text\"  onChange={(e)=>changeHandlerNewEamilAndCode(e)} name=\"code\"/><label>{language.ConfermationCode}</label></div>\r\n            </div>\r\n            <div className={Style.btn}><button onClick={()=>updateEmail()}>{language.update}</button><Link href=\"/profile\"><button>{language.cancel}</button></Link></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Email\r\n"]},"metadata":{},"sourceType":"module"}