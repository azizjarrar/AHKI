{"ast":null,"code":"import _defineProperty from \"F:/AHKI/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"F:/AHKI/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:/AHKI/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axiosApiInstance from '../interceptor/interceptor';\n\nvar postnrmltopic = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, token) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", axiosApiInstance.post('/postnrmltopic/addPost', data, {\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function postnrmltopic(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar addDailyTopicPost = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data, token) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", axiosApiInstance.post('/postnrmltopic/addDailyTopicPost', data, {\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function addDailyTopicPost(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar getCurrentUserPosts = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(token) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", axiosApiInstance.post('/postnrmltopic/getCurrentUserPosts', {}, {\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getCurrentUserPosts(_x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar getOtherUserPosts = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data, token) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", axiosApiInstance.post('/postnrmltopic/getOtherUserPosts', _objectSpread({}, data)));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getOtherUserPosts(_x6, _x7) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar deletePost = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(data, token) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            return _context5.abrupt(\"return\", axiosApiInstance.post('/postnrmltopic/deletePost', _objectSpread({}, data), {\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }));\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function deletePost(_x8, _x9) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nvar getFriendsPosts = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(data, token) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", axiosApiInstance.post('/postnrmltopic/getFriendsPosts', _objectSpread({}, data), {\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function getFriendsPosts(_x10, _x11) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nvar getTodayTopicPost = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(data, token) {\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            return _context7.abrupt(\"return\", axiosApiInstance.post('/postnrmltopic/getTodayTopicPost', _objectSpread({}, data), {\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }));\n\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function getTodayTopicPost(_x12, _x13) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nvar getTopUserPostsLikes = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            return _context8.abrupt(\"return\", axiosApiInstance.post('/postnrmltopic/getTopUserPostsLikes'));\n\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function getTopUserPostsLikes() {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nexport { getTopUserPostsLikes, getTodayTopicPost, addDailyTopicPost, getFriendsPosts, deletePost, getOtherUserPosts, postnrmltopic, getCurrentUserPosts };","map":{"version":3,"sources":["F:/AHKI/services/post.js"],"names":["axiosApiInstance","postnrmltopic","data","token","post","headers","Authorization","addDailyTopicPost","getCurrentUserPosts","getOtherUserPosts","deletePost","getFriendsPosts","getTodayTopicPost","getTopUserPostsLikes"],"mappings":"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","sourcesContent":["import axiosApiInstance from '../interceptor/interceptor'\r\nconst postnrmltopic = async (data,token) => {\r\n  return axiosApiInstance.post('/postnrmltopic/addPost',data,{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\nconst addDailyTopicPost = async (data,token) => {\r\n  return axiosApiInstance.post('/postnrmltopic/addDailyTopicPost',data,{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\nconst getCurrentUserPosts = async (token) => {\r\n  return axiosApiInstance.post('/postnrmltopic/getCurrentUserPosts',{},{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\nconst getOtherUserPosts = async (data,token) => {\r\n    return axiosApiInstance.post('/postnrmltopic/getOtherUserPosts',{...data})\r\n  }\r\n  const deletePost = async (data,token) => {\r\n    return axiosApiInstance.post('/postnrmltopic/deletePost',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n  }\r\n  const getFriendsPosts = async (data,token) => {\r\n    return axiosApiInstance.post('/postnrmltopic/getFriendsPosts',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n  }\r\n  const getTodayTopicPost = async (data,token) => {\r\n    return axiosApiInstance.post('/postnrmltopic/getTodayTopicPost',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n  }\r\n  const getTopUserPostsLikes = async () => {\r\n    return axiosApiInstance.post('/postnrmltopic/getTopUserPostsLikes')\r\n  }\r\nexport {getTopUserPostsLikes,getTodayTopicPost,addDailyTopicPost,getFriendsPosts,deletePost, getOtherUserPosts,postnrmltopic ,getCurrentUserPosts}"]},"metadata":{},"sourceType":"module"}