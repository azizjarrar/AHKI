{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport Styles from './comment.module.scss';\nimport HeartComment from '../heartComment/heartComment';\nimport ShowLikesUserNames from '../showLikesUserNames/showLikesUserNames';\nimport { deleteComment } from '../../services/postComments';\nimport { deleteCommentFromImage } from '../../services/imageComments';\nimport { countImageCommentsLikes } from '../../services/imageLikes';\nimport { countPostCommentsLikes } from '../../services/post_likes';\n\nconst Comment = props => {\n  const [settings, setSettings] = React.useState({\n    state: false,\n    firstClick: false\n  });\n  const [likesModal, setLikesModal] = React.useState(false);\n  const [likesNumber, setLikesNumber] = React.useState(0);\n  /******************************************************************************************\r\n  *on click on the 3 dots will show settings like delete or report \r\n  ******************************************************************************************/\n\n  React.useEffect(() => {\n    if (props.imgid != undefined) {\n      countImageCommentsLikes({\n        commentid: props.commentid\n      }, props.token).then(result => {\n        setLikesNumber(result.data.count);\n      }).catch(error => {\n        alert(error);\n      });\n    } else {\n      countPostCommentsLikes({\n        commentid: props.commentid\n      }, props.token).then(result => {\n        setLikesNumber(result.data.count);\n      }).catch(error => {\n        alert(error);\n      });\n    }\n  }, []); //add like in time to likes number\n\n  const addLikeInTime = newLikesNumber => {\n    setLikesNumber(e => e + newLikesNumber);\n  }; // show users who likes this comment\n\n\n  const openshowLikesUserNames = () => {\n    setLikesModal(e => !e);\n  }; // show settings of comment report delete\n\n\n  const ShowSettings = () => {\n    if (settings.firstClick != true) {\n      setSettings({\n        state: true,\n        firstClick: true\n      });\n    }\n  }; // close setting componenet\n\n\n  const closeComponenet = () => {\n    setSettings({\n      state: false,\n      firstClick: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: Styles.container,\n    style: likesModal == true || settings.state == true ? {\n      zIndex: \"999999999999999999\"\n    } : {},\n    children: [likesModal && /*#__PURE__*/_jsx(ShowLikesUserNames, {\n      imgid: props.imgid,\n      showLikesForComment: true,\n      closepopUp: openshowLikesUserNames,\n      commentid: props.commentid\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: Styles.imageUserAndNameContainer,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: Styles.userImage,\n        children: props.userProfileImageUrl != \"anonym\" ? /*#__PURE__*/_jsx(\"img\", {\n          src: props.userProfileImageUrl || \"/avatar.png\"\n        }) : /*#__PURE__*/_jsx(\"img\", {\n          style: {\n            minHeight: \"0\",\n            width: \"75%\",\n            height: \"75%\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%,-50%)\"\n          },\n          src: \"/anonymous.png\",\n          alt: \"anonymous\"\n        })\n      }), /*#__PURE__*/_jsx(\"h3\", {\n        children: props.name\n      }), /*#__PURE__*/_jsxs(\"h3\", {\n        className: Styles.date,\n        children: [props.date.slice(0, 10), \" \", props.date.slice(11, 16)]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: Styles.Settings,\n        style: settings.state ? {\n          zIndex: \"999999999999999999\"\n        } : {\n          zIndex: \"1\"\n        },\n        onClick: () => ShowSettings(),\n        children: [\"\\u2026\", settings.state && /*#__PURE__*/_jsx(SettingsPComments, {\n          ownerid: props.ownerid,\n          currentUserId: props.currentUserId,\n          deleteCommentInCurrentTime: props.deleteCommentInCurrentTime,\n          postid: props.postid,\n          token: props.token,\n          closeComponenetfn: closeComponenet,\n          imgid: props.imgid,\n          commentid: props.commentid\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: Styles.comments,\n      children: /*#__PURE__*/_jsx(\"p\", {\n        children: props.text\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: Styles.likesAndComments,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: Styles.likes,\n        children: [/*#__PURE__*/_jsx(HeartComment, {\n          imgid: props.imgid,\n          addLikeInTime: e => addLikeInTime(e),\n          token: props.token,\n          commentid: props.commentid\n        }), /*#__PURE__*/_jsx(\"p\", {\n          className: Styles.likesNumber,\n          onClick: () => openshowLikesUserNames(),\n          children: likesNumber || 0\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Styles.Comments,\n        children: /*#__PURE__*/_jsx(\"p\", {})\n      })]\n    })]\n  });\n};\n\nexport default Comment;\n\nconst SettingsPComments = props => {\n  const [errorMessage, setErrorMessage] = React.useState({\n    state: false,\n    text: \"\"\n  }); // when state true show  pop up \n  //delete comment there is 2 comment of image and comment of image\n\n  const deleteCommentFn = () => {\n    //if there is img then it will open setting of img comments\n    if (props.imgid != undefined) {\n      deleteCommentFromImage({\n        imgid: props.imgid,\n        commentid: props.commentid\n      }, props.token).then(result => {\n        props.deleteCommentInCurrentTime(props.commentid);\n      }); // else it will  post comment\n    } else {\n      deleteComment({\n        postid: props.postid,\n        commentid: props.commentid\n      }, props.token).then(result => {\n        props.deleteCommentInCurrentTime(props.commentid);\n      });\n    }\n  }; // close error modal\n\n\n  const closePopUp = () => {\n    setErrorMessage({\n      state: false,\n      text: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: Styles.containerSettings,\n    children: [errorMessage.state == true && /*#__PURE__*/_jsx(PopUpMessage, {\n      fnclose: () => closePopUp(),\n      openPopUp: errorMessage\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: Styles.paramsContainer,\n      children: /*#__PURE__*/_jsx(\"h3\", {\n        children: \"Report\"\n      })\n    }), props.ownerid._id == props.currentUserId && /*#__PURE__*/_jsx(\"div\", {\n      className: Styles.paramsContainer,\n      onClick: () => deleteCommentFn(),\n      children: /*#__PURE__*/_jsx(\"h3\", {\n        children: \"Delete\"\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: Styles.paramsContainer,\n      onClick: () => props.closeComponenetfn(),\n      children: /*#__PURE__*/_jsx(\"h3\", {\n        children: \"Close\"\n      })\n    })]\n  });\n};","map":null,"metadata":{},"sourceType":"module"}