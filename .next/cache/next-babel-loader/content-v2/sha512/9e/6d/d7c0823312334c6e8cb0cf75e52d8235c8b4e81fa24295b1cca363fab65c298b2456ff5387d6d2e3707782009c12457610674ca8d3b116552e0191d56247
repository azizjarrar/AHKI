{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axiosApiInstance from '../interceptor/interceptor';\n\nconst postnrmltopic = async (data, token) => {\n  return axiosApiInstance.post('/postnrmltopic/addPost', data, {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst addDailyTopicPost = async (data, token) => {\n  return axiosApiInstance.post('/postnrmltopic/addDailyTopicPost', data, {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst getCurrentUserPosts = async token => {\n  return axiosApiInstance.post('/postnrmltopic/getCurrentUserPosts', {}, {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst getOtherUserPosts = async (data, token) => {\n  return axiosApiInstance.post('/postnrmltopic/getOtherUserPosts', _objectSpread({}, data));\n};\n\nconst deletePost = async (data, token) => {\n  return axiosApiInstance.post('/postnrmltopic/deletePost', _objectSpread({}, data), {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst getFriendsPosts = async (data, token) => {\n  return axiosApiInstance.post('/postnrmltopic/getFriendsPosts', _objectSpread({}, data), {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst getTodayTopicPost = async (data, token) => {\n  return axiosApiInstance.post('/postnrmltopic/getTodayTopicPost', _objectSpread({}, data), {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst getSelectedTopicPosts = async (data, token) => {\n  return axiosApiInstance.post('/postnrmltopic/getSelectedTopicPosts', _objectSpread({}, data), {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst getTopUserPostsLikes = async data => {\n  return axiosApiInstance.post('/postnrmltopic/getTopUserPostsLikes', _objectSpread({}, data), {});\n};\n\nexport { getSelectedTopicPosts, getTopUserPostsLikes, getTodayTopicPost, addDailyTopicPost, getFriendsPosts, deletePost, getOtherUserPosts, postnrmltopic, getCurrentUserPosts };","map":{"version":3,"sources":["F:/AHKI/services/post.js"],"names":["axiosApiInstance","postnrmltopic","data","token","post","headers","Authorization","addDailyTopicPost","getCurrentUserPosts","getOtherUserPosts","deletePost","getFriendsPosts","getTodayTopicPost","getSelectedTopicPosts","getTopUserPostsLikes"],"mappings":";;;;;;AAAA,OAAOA,gBAAP,MAA6B,4BAA7B;;AACA,MAAMC,aAAa,GAAG,OAAOC,IAAP,EAAYC,KAAZ,KAAsB;AAC1C,SAAOH,gBAAgB,CAACI,IAAjB,CAAsB,wBAAtB,EAA+CF,IAA/C,EAAoD;AAAEG,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAE,YAAYH;AAA5B;AAAX,GAApD,CAAP;AACD,CAFD;;AAGA,MAAMI,iBAAiB,GAAG,OAAOL,IAAP,EAAYC,KAAZ,KAAsB;AAC9C,SAAOH,gBAAgB,CAACI,IAAjB,CAAsB,kCAAtB,EAAyDF,IAAzD,EAA8D;AAAEG,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAE,YAAYH;AAA5B;AAAX,GAA9D,CAAP;AACD,CAFD;;AAGA,MAAMK,mBAAmB,GAAG,MAAOL,KAAP,IAAiB;AAC3C,SAAOH,gBAAgB,CAACI,IAAjB,CAAsB,oCAAtB,EAA2D,EAA3D,EAA8D;AAAEC,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAE,YAAYH;AAA5B;AAAX,GAA9D,CAAP;AACD,CAFD;;AAGA,MAAMM,iBAAiB,GAAG,OAAOP,IAAP,EAAYC,KAAZ,KAAsB;AAC5C,SAAOH,gBAAgB,CAACI,IAAjB,CAAsB,kCAAtB,oBAA6DF,IAA7D,EAAP;AACD,CAFH;;AAGE,MAAMQ,UAAU,GAAG,OAAOR,IAAP,EAAYC,KAAZ,KAAsB;AACvC,SAAOH,gBAAgB,CAACI,IAAjB,CAAsB,2BAAtB,oBAAsDF,IAAtD,GAA4D;AAAEG,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAE,YAAYH;AAA5B;AAAX,GAA5D,CAAP;AACD,CAFD;;AAGA,MAAMQ,eAAe,GAAG,OAAOT,IAAP,EAAYC,KAAZ,KAAsB;AAC5C,SAAOH,gBAAgB,CAACI,IAAjB,CAAsB,gCAAtB,oBAA2DF,IAA3D,GAAiE;AAAEG,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAE,YAAYH;AAA5B;AAAX,GAAjE,CAAP;AACD,CAFD;;AAGA,MAAMS,iBAAiB,GAAG,OAAOV,IAAP,EAAYC,KAAZ,KAAsB;AAC9C,SAAOH,gBAAgB,CAACI,IAAjB,CAAsB,kCAAtB,oBAA6DF,IAA7D,GAAmE;AAAEG,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAE,YAAYH;AAA5B;AAAX,GAAnE,CAAP;AACD,CAFD;;AAGA,MAAMU,qBAAqB,GAAG,OAAOX,IAAP,EAAYC,KAAZ,KAAsB;AAClD,SAAOH,gBAAgB,CAACI,IAAjB,CAAsB,sCAAtB,oBAAiEF,IAAjE,GAAuE;AAAEG,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAE,YAAYH;AAA5B;AAAX,GAAvE,CAAP;AACD,CAFD;;AAGA,MAAMW,oBAAoB,GAAG,MAAOZ,IAAP,IAAgB;AAC3C,SAAOF,gBAAgB,CAACI,IAAjB,CAAsB,qCAAtB,oBAAgEF,IAAhE,GAAsE,EAAtE,CAAP;AACD,CAFD;;AAGF,SAAQW,qBAAR,EAA8BC,oBAA9B,EAAmDF,iBAAnD,EAAqEL,iBAArE,EAAuFI,eAAvF,EAAuGD,UAAvG,EAAmHD,iBAAnH,EAAqIR,aAArI,EAAoJO,mBAApJ","sourcesContent":["import axiosApiInstance from '../interceptor/interceptor'\r\nconst postnrmltopic = async (data,token) => {\r\n  return axiosApiInstance.post('/postnrmltopic/addPost',data,{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\nconst addDailyTopicPost = async (data,token) => {\r\n  return axiosApiInstance.post('/postnrmltopic/addDailyTopicPost',data,{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\nconst getCurrentUserPosts = async (token) => {\r\n  return axiosApiInstance.post('/postnrmltopic/getCurrentUserPosts',{},{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\nconst getOtherUserPosts = async (data,token) => {\r\n    return axiosApiInstance.post('/postnrmltopic/getOtherUserPosts',{...data})\r\n  }\r\n  const deletePost = async (data,token) => {\r\n    return axiosApiInstance.post('/postnrmltopic/deletePost',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n  }\r\n  const getFriendsPosts = async (data,token) => {\r\n    return axiosApiInstance.post('/postnrmltopic/getFriendsPosts',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n  }\r\n  const getTodayTopicPost = async (data,token) => {\r\n    return axiosApiInstance.post('/postnrmltopic/getTodayTopicPost',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n  }\r\n  const getSelectedTopicPosts = async (data,token) => {\r\n    return axiosApiInstance.post('/postnrmltopic/getSelectedTopicPosts',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n  }\r\n  const getTopUserPostsLikes = async (data) => {\r\n    return axiosApiInstance.post('/postnrmltopic/getTopUserPostsLikes',{...data},{})\r\n  }\r\nexport {getSelectedTopicPosts,getTopUserPostsLikes,getTodayTopicPost,addDailyTopicPost,getFriendsPosts,deletePost, getOtherUserPosts,postnrmltopic ,getCurrentUserPosts}"]},"metadata":{},"sourceType":"module"}