{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axiosApiInstance from '../interceptor/interceptor';\n\nconst getImageData = async (data, token) => {\n  return axiosApiInstance.post(\"/image/getImageData\", _objectSpread({}, data), {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst deleteImage = async (data, token) => {\n  return axiosApiInstance.post(\"/image/deleteImage\", _objectSpread({}, data), {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nconst getUserImages = async (data, token) => {\n  return axiosApiInstance.post(\"/image/getUserImages\", _objectSpread({}, data), {\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\n\nexport { getUserImages, getImageData, deleteImage };","map":{"version":3,"sources":["F:/AHKI/services/images.js"],"names":["axiosApiInstance","getImageData","data","token","post","headers","Authorization","deleteImage","getUserImages"],"mappings":";;;;;;AAAA,OAAOA,gBAAP,MAA6B,4BAA7B;;AACA,MAAMC,YAAY,GAAC,OAAMC,IAAN,EAAWC,KAAX,KAAmB;AAClC,SAAOH,gBAAgB,CAACI,IAAjB,CAAsB,qBAAtB,oBAAgDF,IAAhD,GAAsD;AAAEG,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAE,YAAYH;AAA5B;AAAX,GAAtD,CAAP;AACH,CAFD;;AAGA,MAAMI,WAAW,GAAC,OAAML,IAAN,EAAWC,KAAX,KAAmB;AACnC,SAAOH,gBAAgB,CAACI,IAAjB,CAAsB,oBAAtB,oBAA+CF,IAA/C,GAAqD;AAAEG,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAE,YAAYH;AAA5B;AAAX,GAArD,CAAP;AACD,CAFD;;AAGA,MAAMK,aAAa,GAAC,OAAMN,IAAN,EAAWC,KAAX,KAAmB;AACrC,SAAOH,gBAAgB,CAACI,IAAjB,CAAsB,sBAAtB,oBAAiDF,IAAjD,GAAuD;AAAEG,IAAAA,OAAO,EAAE;AAACC,MAAAA,aAAa,EAAE,YAAYH;AAA5B;AAAX,GAAvD,CAAP;AACD,CAFD;;AAGE,SAAQK,aAAR,EAAsBP,YAAtB,EAAmCM,WAAnC","sourcesContent":["import axiosApiInstance from '../interceptor/interceptor'\r\nconst getImageData=async(data,token)=>{\r\n    return axiosApiInstance.post(\"/image/getImageData\",{...data},{ headers: {Authorization: 'Bearer ' + token }});\r\n}\r\nconst deleteImage=async(data,token)=>{\r\n  return axiosApiInstance.post(\"/image/deleteImage\",{...data},{ headers: {Authorization: 'Bearer ' + token }});\r\n}\r\nconst getUserImages=async(data,token)=>{\r\n  return axiosApiInstance.post(\"/image/getUserImages\",{...data},{ headers: {Authorization: 'Bearer ' + token }});\r\n}\r\n  export {getUserImages,getImageData,deleteImage}"]},"metadata":{},"sourceType":"module"}