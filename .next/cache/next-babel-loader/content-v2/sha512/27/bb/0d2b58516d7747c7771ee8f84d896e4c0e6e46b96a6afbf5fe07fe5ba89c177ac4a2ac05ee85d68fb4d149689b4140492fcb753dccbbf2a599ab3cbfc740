{"ast":null,"code":"import _regeneratorRuntime from \"F:/AHKI/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"F:/AHKI/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"F:/AHKI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axiosApiInstance from '../interceptor/interceptor';\n\nvar addComment = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, token) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", axiosApiInstance.post('/comments/addComment', _objectSpread({}, data), {\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function addComment(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getComments = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data, token) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", axiosApiInstance.post('/comments/getComments', _objectSpread({}, data), {\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getComments(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar deleteComment = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data, token) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", axiosApiInstance.post('/comments/deleteComment', _objectSpread({}, data), {\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function deleteComment(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar countComments = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data, token) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", axiosApiInstance.post('/comments/countComments', _objectSpread({}, data), {\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            }));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function countComments(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n/*****************************/\n\n\nexport { countComments, deleteComment, addComment, getComments };","map":{"version":3,"sources":["F:/AHKI/services/postComments.js"],"names":["axiosApiInstance","addComment","data","token","post","headers","Authorization","getComments","deleteComment","countComments"],"mappings":";;;;;;;;AAAA,OAAOA,gBAAP,MAA6B,4BAA7B;;AACA,IAAMC,UAAU;AAAA,sEAAG,iBAAOC,IAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,6CACVH,gBAAgB,CAACI,IAAjB,CAAsB,sBAAtB,oBAAiDF,IAAjD,GAAuD;AAAEG,cAAAA,OAAO,EAAE;AAACC,gBAAAA,aAAa,EAAE,YAAYH;AAA5B;AAAX,aAAvD,CADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVF,UAAU;AAAA;AAAA;AAAA,GAAhB;;AAGA,IAAMM,WAAW;AAAA,uEAAG,kBAAOL,IAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,8CACXH,gBAAgB,CAACI,IAAjB,CAAsB,uBAAtB,oBAAkDF,IAAlD,GAAwD;AAAEG,cAAAA,OAAO,EAAE;AAACC,gBAAAA,aAAa,EAAE,YAAYH;AAA5B;AAAX,aAAxD,CADW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXI,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAGA,IAAMC,aAAa;AAAA,uEAAG,kBAAON,IAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,8CACbH,gBAAgB,CAACI,IAAjB,CAAsB,yBAAtB,oBAAoDF,IAApD,GAA0D;AAAEG,cAAAA,OAAO,EAAE;AAACC,gBAAAA,aAAa,EAAE,YAAYH;AAA5B;AAAX,aAA1D,CADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbK,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAGA,IAAMC,aAAa;AAAA,uEAAG,kBAAOP,IAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,8CACbH,gBAAgB,CAACI,IAAjB,CAAsB,yBAAtB,oBAAoDF,IAApD,GAA0D;AAAEG,cAAAA,OAAO,EAAE;AAACC,gBAAAA,aAAa,EAAE,YAAYH;AAA5B;AAAX,aAA1D,CADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbM,aAAa;AAAA;AAAA;AAAA,GAAnB;AAGA;;;AACA,SAASA,aAAT,EAAuBD,aAAvB,EAAqCP,UAArC,EAAiDM,WAAjD","sourcesContent":["import axiosApiInstance from '../interceptor/interceptor'\r\nconst addComment = async (data,token) => {\r\n  return axiosApiInstance.post('/comments/addComment',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\nconst getComments = async (data,token) => {\r\n  return axiosApiInstance.post('/comments/getComments',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\nconst deleteComment = async (data,token) => {\r\n  return axiosApiInstance.post('/comments/deleteComment',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\nconst countComments = async (data,token) => {\r\n  return axiosApiInstance.post('/comments/countComments',{...data},{ headers: {Authorization: 'Bearer ' + token }})\r\n}\r\n/*****************************/\r\nexport { countComments,deleteComment,addComment ,getComments}"]},"metadata":{},"sourceType":"module"}