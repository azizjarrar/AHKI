{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport LanguageContext from '../../../context/languageContext';\nimport PhoneInput from 'react-phone-input-2';\nimport { Register } from '../../../services/user';\nimport Style from '../ModalSingInSingUp.module.scss';\nimport { DatePicker } from 'react-rainbow-components';\n\nconst singUp = props => {\n  const [language, setLanguage] = React.useContext(LanguageContext);\n  const [confirmRegisterForm, setConfirmRegisterForm] = React.useState(false); //enable and disable sing up button if the from is not complete\n\n  const [errorData, setErrorData] = React.useState({\n    userName: {\n      state: 'false',\n      msg: ''\n    },\n    password: {\n      state: 'false',\n      msg: ''\n    },\n    email: {\n      state: 'false',\n      msg: ''\n    }\n  }); //error messages\n\n  const [registerState, setregisterState] = React.useState({\n    userName: \"\",\n    tel: \"\",\n    password: \"\",\n    email: \"\",\n    birthDay: \"2000-01-01T23:00:00.000Z\",\n    dialCode: \"\"\n  }); //user register data\n\n  const [changeEmailOrTelinit, setChangeEmailOrTel] = React.useState(\"email\");\n  var userName = React.useRef();\n  var password = React.useRef();\n  React.useEffect(() => {\n    setTimeout(() => {\n      userName.current.value = \"\";\n      password.current.value = \"\";\n    }, 1000);\n  }, []);\n\n  const singUp = () => {\n    if (changeEmailOrTelinit == \"email\") {\n      delete registerState[\"tel\"];\n    } else {\n      delete registerState[\"email\"];\n    }\n\n    Register(registerState).then(res => {\n      if (res.data == undefined) {} else if (res.data.state == false) {\n        props.setErrorMessageProps({\n          state: true,\n          text: res.data.message\n        });\n      } else {\n        props.openVerifieAccountModal(res.data.userid);\n        props.fnshowSingInOrSingUp();\n      }\n    }).catch(e => {\n      props.setErrorMessageProps({\n        state: true,\n        text: e.message\n      });\n    });\n  };\n\n  const formValidation = e => {\n    let tel = \"\";\n    let email = \"\";\n\n    if (e.target.form != null) {\n      let userName = e.target.form[0].value || \"\";\n\n      if (e.target.form[1].name == \"phone\") {\n        tel = e.target.form[1].value;\n        email = \"\";\n      } else {\n        tel = \"\";\n        email = e.target.form[1].value;\n      }\n\n      let password = e.target.form[2].value || \"\";\n      let confirmPassword = e.target.form[3].value || \"\";\n      let birdhDay = e.target.form[4].value || \"\";\n\n      function validateEmail(email) {\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(email);\n      }\n\n      if (email.length > 0) {\n        if (validateEmail(email.toLowerCase())) {\n          e.target.form[1].style.border = \"1px solid rgba(22, 24, 35, 0.12) \";\n          setErrorData(e => {\n            return _objectSpread(_objectSpread({}, e), {}, {\n              email: {\n                state: 'false',\n                msg: ''\n              }\n            });\n          });\n        } else {\n          e.target.form[1].style.border = \"1px solid red \";\n          setErrorData(e => {\n            return _objectSpread(_objectSpread({}, e), {}, {\n              email: {\n                state: 'true',\n                msg: 'Enter a valid email address'\n              }\n            });\n          });\n        }\n      }\n\n      if (confirmPassword.length > 1) {\n        if (password != confirmPassword) {\n          document.getElementsByClassName(e.target.form[3].classList[1])[0].style.border = \"1px solid red\";\n          document.getElementsByClassName(e.target.form[3].classList[1])[1].style.border = \"1px solid red\";\n          setErrorData(e => {\n            return _objectSpread(_objectSpread({}, e), {}, {\n              password: {\n                state: 'true',\n                msg: 'the 2 password are not the same'\n              }\n            });\n          });\n        } else {\n          if (password.length < 8) {\n            setErrorData(e => {\n              return _objectSpread(_objectSpread({}, e), {}, {\n                password: {\n                  state: 'true',\n                  msg: 'your browser must contain more than 8 letters'\n                }\n              });\n            });\n          } else {\n            setErrorData(e => {\n              return _objectSpread(_objectSpread({}, e), {}, {\n                password: {\n                  state: 'false',\n                  msg: 'your browser must contain more than 8 letters'\n                }\n              });\n            });\n            document.getElementsByClassName(e.target.form[3].classList[1])[0].style.border = \"1px solid rgba(22, 24, 35, 0.12)\";\n            document.getElementsByClassName(e.target.form[3].classList[1])[1].style.border = \"1px solid rgba(22, 24, 35, 0.12)\";\n          }\n        }\n      } else {\n        document.getElementsByClassName(e.target.form[3].classList[1])[0].style.border = \"1px solid rgba(22, 24, 35, 0.12)\";\n        document.getElementsByClassName(e.target.form[3].classList[1])[1].style.border = \"1px solid rgba(22, 24, 35, 0.12)\";\n      }\n\n      if (userName.length > 0 && password.length > 0 && confirmPassword.length > 0 && (validateEmail(email) || tel.length > 6)) {\n        if (password == confirmPassword) {\n          setConfirmRegisterForm(true);\n          return true;\n        } else {\n          setConfirmRegisterForm(false);\n          return false;\n        }\n      } else {\n        setConfirmRegisterForm(false);\n        return false;\n      }\n    }\n  };\n  /****************************************/\n\n  /************Set Phone Number************/\n\n  /****************************************/\n\n\n  const onChangeHandlerRegisterPhone = (data, country) => {\n    setregisterState(e => {\n      return _objectSpread(_objectSpread({}, e), {}, {\n        \"dialCode\": country.dialCode,\n        'tel': data\n      });\n    });\n  };\n  /****************************************/\n\n  /********Set User Name and Password******/\n\n  /****************************************/\n\n\n  const userName_Password_Handler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setregisterState(e => {\n      return _objectSpread(_objectSpread({}, e), {}, {\n        [name]: value\n      });\n    });\n  };\n\n  const changeEmailOrTel = () => {\n    setChangeEmailOrTel(e => {\n      if (e == \"email\") {\n        setregisterState(e => {\n          return _objectSpread(_objectSpread({}, e), {}, {\n            email: \"\"\n          });\n        });\n        setConfirmRegisterForm(false);\n        return \"tel\";\n      } else {\n        setregisterState(e => {\n          return _objectSpread(_objectSpread({}, e), {}, {\n            tel: \"\"\n          });\n        });\n        setConfirmRegisterForm(false);\n        return \"email\";\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: Style.singUp,\n    style: props.showSingIn_Or_SHowSingUp ? {\n      left: '0%'\n    } : {\n      left: '-100%'\n    },\n    children: /*#__PURE__*/_jsxs(\"form\", {\n      className: Style.form,\n      onSubmit: e => {\n        e.preventDefault();\n      },\n      onChange: e => {\n        formValidation(e);\n      },\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: Style.pageHeader,\n        children: /*#__PURE__*/_jsx(\"h2\", {\n          children: \"Sing up For NOZZLA\"\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.descriptionHeader,\n        children: /*#__PURE__*/_jsx(\"h3\", {\n          children: language.createaprofilefollowotheraccountstalkaboutyourownexperienceandmore\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: Style.inputContainer,\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          ref: userName,\n          name: \"userName\",\n          type: \"text\",\n          className: Style.input,\n          onChange: e => userName_Password_Handler(e),\n          required: true\n        }), /*#__PURE__*/_jsx(\"label\", {\n          children: /*#__PURE__*/_jsx(\"span\", {\n            className: Style.labelspan,\n            children: language.username\n          })\n        })]\n      }), errorData.userName.state == \"true\" && /*#__PURE__*/_jsx(\"div\", {\n        className: Style.errorMessage,\n        children: /*#__PURE__*/_jsx(\"p\", {\n          children: errorData.userName.msg\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.inputContainer,\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: Style.telOrEmail,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: Style.labelEmailOrPassword,\n            onClick: () => changeEmailOrTel(),\n            children: /*#__PURE__*/_jsxs(\"p\", {\n              children: [\"change to \", changeEmailOrTelinit]\n            })\n          }), changeEmailOrTelinit == \"tel\" ? /*#__PURE__*/_jsx(\"div\", {\n            className: Style.tel,\n            children: /*#__PURE__*/_jsx(PhoneInput, {\n              name: \"tel\",\n              specialLabel: language.phone,\n              country: 'tn',\n              inputProps: {\n                name: 'phone',\n                required: true,\n                autoFocus: true\n              },\n              value: registerState.tel,\n              onChange: (e, country) => onChangeHandlerRegisterPhone(e, country)\n            })\n          }) : /*#__PURE__*/_jsxs(\"div\", {\n            className: Style.email,\n            children: [/*#__PURE__*/_jsx(\"input\", {\n              name: \"email\",\n              type: \"text\",\n              onChange: e => {\n                userName_Password_Handler(e);\n              },\n              className: `${Style.input} `,\n              required: true\n            }), /*#__PURE__*/_jsx(\"label\", {\n              children: /*#__PURE__*/_jsx(\"span\", {\n                className: Style.labelspan,\n                children: language.email\n              })\n            })]\n          })]\n        })\n      }), errorData.email.state == \"true\" && /*#__PURE__*/_jsx(\"div\", {\n        className: Style.errorMessage,\n        children: /*#__PURE__*/_jsx(\"p\", {\n          children: errorData.email.msg\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: Style.inputContainer,\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          ref: password,\n          name: \"password\",\n          type: \"password\",\n          onChange: e => {\n            userName_Password_Handler(e);\n          },\n          className: `${Style.ConfirmPassword} ${Style.input} `,\n          required: true\n        }), /*#__PURE__*/_jsx(\"label\", {\n          children: /*#__PURE__*/_jsx(\"span\", {\n            className: Style.labelspan,\n            children: language.password\n          })\n        })]\n      }), errorData.password.state == \"true\" && /*#__PURE__*/_jsx(\"div\", {\n        className: Style.errorMessage,\n        children: /*#__PURE__*/_jsx(\"p\", {\n          children: errorData.password.msg\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: Style.inputContainer,\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          type: \"password\",\n          className: `${Style.input} ${Style.ConfirmPassword}`,\n          required: true\n        }), /*#__PURE__*/_jsx(\"label\", {\n          children: /*#__PURE__*/_jsx(\"span\", {\n            className: Style.labelspan,\n            children: language.confirmpassword\n          })\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.inputContainer,\n        children: /*#__PURE__*/_jsx(DatePicker, {\n          value: registerState.birthDay,\n          onChange: value => setregisterState(e => {\n            return _objectSpread(_objectSpread({}, e), {}, {\n              \"birthDay\": value\n            });\n          }),\n          label: \"birth Day\",\n          formatStyle: \"large\",\n          locale: language.age\n        })\n      }), confirmRegisterForm == true && /*#__PURE__*/_jsx(\"button\", {\n        className: Style.btn,\n        onClick: () => singUp(),\n        children: language.signup\n      }), confirmRegisterForm == false && /*#__PURE__*/_jsx(\"button\", {\n        className: Style.btn,\n        disabled: true,\n        style: {\n          opacity: 0.2,\n          cursor: 'default'\n        },\n        children: language.signup\n      }), /*#__PURE__*/_jsxs(\"p\", {\n        className: Style.message,\n        children: [language.AlreadyHaveAccount, \"  \", /*#__PURE__*/_jsx(\"span\", {\n          className: Style.clickHere,\n          onClick: () => props.fnshowSingInOrSingUp(),\n          children: language.signin\n        })]\n      })]\n    })\n  });\n};\n\nexport default singUp;","map":null,"metadata":{},"sourceType":"module"}