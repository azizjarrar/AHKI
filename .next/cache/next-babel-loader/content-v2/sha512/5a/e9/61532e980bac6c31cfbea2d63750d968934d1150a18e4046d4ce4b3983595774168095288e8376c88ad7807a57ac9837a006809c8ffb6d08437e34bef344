{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"F:/AHKI/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:/AHKI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"F:/AHKI/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"F:/AHKI/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:/AHKI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Style from '../styles/chat.module.scss';\nimport NavBar from '../components/navBar/NavBar';\nimport { Picker, Emoji } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { searchUserNameApi } from '../services/user';\nimport { updateColorChat, addMessage, getMessagesOfCurrentconversation, getUserWhoChatWith } from '../services/chat';\nimport socketContext from '../context/socketContext';\nimport userContext from '../context/userContext';\n\nvar chat = function chat(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      closeOrOpenEmojiPickerState = _React$useState2[0],\n      setcloseOrOpenEmojiPickerState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(9),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      EmojiContainerHeight = _React$useState4[0],\n      setEmojiContainerHeight = _React$useState4[1]; //responsive handler\n\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      listOfUsers = _React$useState6[0],\n      setListOfUsers = _React$useState6[1];\n\n  var _React$useState7 = React.useState({\n    currentImageUrl: undefined,\n    userName: undefined,\n    _id: undefined\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      currentUserToChatWith = _React$useState8[0],\n      setCurrentUserToChatWith = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      message = _React$useState10[0],\n      setMessage = _React$useState10[1];\n\n  var _React$useState11 = React.useState([]),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      currentChats = _React$useState12[0],\n      setCurrentChats = _React$useState12[1];\n\n  var messagesComp = React.useRef(null);\n\n  var _React$useContext = React.useContext(userContext),\n      _React$useContext2 = _slicedToArray(_React$useContext, 2),\n      user = _React$useContext2[0],\n      setUser = _React$useContext2[1];\n\n  var _React$useContext3 = React.useContext(socketContext),\n      _React$useContext4 = _slicedToArray(_React$useContext3, 2),\n      socket = _React$useContext4[0],\n      setSocket = _React$useContext4[1];\n\n  var _React$useState13 = React.useState(function () {\n    return 0;\n  }),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      skip = _React$useState14[0],\n      setSkip = _React$useState14[1];\n\n  var _React$useState15 = React.useState(false),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      isWritingState = _React$useState16[0],\n      setIsWritingState = _React$useState16[1];\n\n  var _React$useState17 = React.useState({\n    colorone: \"#1876f3\",\n    colortwo: \"#e4e6eb\"\n  }),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      chatColor = _React$useState18[0],\n      setChatColor = _React$useState18[1];\n\n  React.useEffect(function () {\n    if (user._id != undefined && user._id.length > 2) getUserWhoChatWith({}, props.token).then(function (result) {\n      var newUserWhoChatWith = result.data.data.map(function (e) {\n        if (e.firstUser._id == user._id) {\n          return Promise.resolve(_objectSpread(_objectSpread({}, e.secoundUser), {}, {\n            color: e.color,\n            notSeenMessageNumber: e.notSeenMessageNumber\n          }));\n        } else {\n          return Promise.resolve(_objectSpread(_objectSpread({}, e.firstUser), {}, {\n            color: e.color,\n            notSeenMessageNumber: e.notSeenMessageNumber\n          }));\n        }\n      });\n      Promise.all(newUserWhoChatWith).then(function (newarray) {\n        setListOfUsers(_toConsumableArray(newarray));\n      });\n    })[\"catch\"](function (e) {\n      return console.log(e.message);\n    });\n  }, [user]);\n  React.useEffect(function () {\n    if (currentUserToChatWith._id != undefined) {\n      getMessagesOfCurrentconversation({\n        secondUser: currentUserToChatWith._id,\n        skip: 0\n      }, props.token).then(function (data) {\n        setCurrentChats(_toConsumableArray(data.data.data.reverse()));\n        messagesComp.current.scrollTop = messagesComp.current.scrollHeight + messagesComp.current.clientHeight;\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n      socket.emit(\"vu\", {\n        state: true,\n        otherUserId: currentUserToChatWith._id\n      });\n    }\n  }, [currentUserToChatWith]);\n\n  var addEmoji = function addEmoji(e) {\n    var sym = e.unified.split('-');\n    var codesArray = [];\n    sym.forEach(function (el) {\n      return codesArray.push('0x' + el);\n    });\n    var emoji = String.fromCodePoint.apply(String, codesArray);\n    setMessage(function (el) {\n      return el + emoji;\n    });\n  };\n\n  var closeOrOpenEmojiPicker = function closeOrOpenEmojiPicker() {\n    setcloseOrOpenEmojiPickerState(function (e) {\n      return !e;\n    });\n  };\n\n  var searchForUser = function searchForUser(e) {\n    searchUserNameApi(e.target.value, props.token).then(function (result) {\n      if (result.data.data != undefined) {\n        setListOfUsers(function (e) {\n          return _toConsumableArray(result.data.data);\n        });\n      }\n    });\n  };\n\n  var getUserdataFn = function getUserdataFn(currentUserData) {\n    setCurrentUserToChatWith(currentUserData);\n  };\n\n  var sendMessage = function sendMessage() {\n    if (message.length > 0 && currentUserToChatWith._id != undefined) {\n      addMessage({\n        receiver: currentUserToChatWith._id,\n        message: message,\n        FirstTime: currentChats.length\n      }, props.token).then(function (data) {\n        setCurrentChats(function (e) {\n          var r = Math.random().toString(36).substring(7);\n          return [].concat(_toConsumableArray(e), [{\n            users: [user._id],\n            message: message,\n            _id: r\n          }]);\n        });\n        messagesComp.current.scrollTop = messagesComp.current.scrollHeight + messagesComp.current.clientHeight;\n        socket.emit(\"sendMessageFromUserToUser\", {\n          otherUserId: currentUserToChatWith._id,\n          text: message,\n          senderId: user._id\n        });\n        setMessage(\"\");\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  };\n\n  var messageHandler = function messageHandler(e) {\n    if (currentUserToChatWith._id != undefined) {\n      if (e.target.value.length > 0) {\n        socket.emit(\"isWriting\", {\n          isWriting: true,\n          otherUserId: currentUserToChatWith._id,\n          senderid: user._id\n        });\n      } else {\n        socket.emit(\"isWriting\", {\n          isWriting: false,\n          otherUserId: currentUserToChatWith._id,\n          senderid: user._id\n        });\n      }\n    }\n\n    setMessage(e.target.value);\n  };\n\n  React.useEffect(function () {\n    function chatHandler(_x) {\n      return _chatHandler.apply(this, arguments);\n    }\n\n    function _chatHandler() {\n      _chatHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n        var audio, ListOfUser;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                audio = new Audio(\"./msgSound.mp3\");\n                audio.play();\n                setIsWritingState(false);\n                socket.emit(\"vu\", {\n                  state: true,\n                  otherUserId: currentUserToChatWith._id\n                });\n                /*if(vu==true){\r\n                    \r\n                    socket.emit(\"vu\",{state:true,otherUserId:currentUserToChatWith._id})\r\n                }*/\n\n                _context.next = 6;\n                return listOfUsers.map(function (e) {\n                  if (data.senderId == e._id && currentUserToChatWith._id != e._id) {\n                    e.notSeenMessageNumber = e.notSeenMessageNumber + 1;\n                    return Promise.resolve(e);\n                  } else {\n                    return Promise.resolve(e);\n                  }\n                });\n\n              case 6:\n                ListOfUser = _context.sent;\n                Promise.all(ListOfUser).then(function (data) {\n                  setListOfUsers(data);\n                });\n\n                if (data.senderId == currentUserToChatWith._id) {\n                  setCurrentChats(function (e) {\n                    var r = Math.random().toString(36).substring(7);\n                    return [].concat(_toConsumableArray(e), [{\n                      users: [data.senderId],\n                      message: data.text,\n                      _id: r\n                    }]);\n                  });\n                  messagesComp.current.scrollTop = messagesComp.current.scrollHeight + messagesComp.current.clientHeight;\n                } else {}\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _chatHandler.apply(this, arguments);\n    }\n\n    function isWriting(data) {\n      if (data.userWhoReciveWriting == user._id && data.senderid == currentUserToChatWith._id) {\n        setIsWritingState(data.isWriting);\n      }\n    }\n\n    var setvu = function setvu(data) {\n      if (document.getElementsByClassName(Style.yourMessageVu).length != 0) {\n        for (var i = currentChats.length - 1; i > 0; i--) {\n          if (document.getElementsByClassName(Style.yourMessageVu)[i] != undefined) {\n            if (document.getElementsByClassName(Style.yourMessageVu)[i].childNodes[1].style.color != \"rgb(24, 118, 243)\") {\n              document.getElementsByClassName(Style.yourMessageVu)[i].childNodes[1].style.color = \"rgb(24, 118, 243)\";\n            }\n          }\n        }\n      }\n    };\n\n    if (socket != undefined && socket != null) {\n      socket.on(\"isWritingState\", isWriting);\n      socket.on(\"getMessageFromUserToUser\", chatHandler);\n      socket.on(\"setvu\", setvu);\n    }\n\n    return function () {\n      if (socket != undefined && socket != null) {\n        socket.off('getMessageFromUserToUser', chatHandler);\n        socket.off(\"isWritingState\", isWriting);\n        socket.off(\"setvu\", setvu);\n      }\n    };\n  });\n\n  var scrollfn = function scrollfn(e) {\n    //if( e.target.scrollTop === (e.target.scrollHeight - e.target.offsetHeight)){\n    if (e.target.scrollTop === 0) {\n      setSkip(function (e) {\n        return e + 20;\n      });\n    }\n  };\n\n  React.useEffect(function () {\n    getMessagesOfCurrentconversation({\n      secondUser: currentUserToChatWith._id,\n      skip: skip\n    }, props.token).then(function (data) {\n      setCurrentChats(function (e) {\n        return [].concat(_toConsumableArray(data.data.data.reverse()), _toConsumableArray(e));\n      });\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  }, [skip]);\n\n  var getNewColor = function getNewColor(color) {\n    setChatColor(function (e) {\n      return _objectSpread(_objectSpread({}, e), {}, {\n        colorone: color\n      });\n    });\n  };\n\n  var setColorOfChatFn = function setColorOfChatFn(colorOfChatFromDataBase) {\n    setChatColor(function (e) {\n      return _objectSpread(_objectSpread({}, e), {}, {\n        colorone: colorOfChatFromDataBase\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: Style.container,\n    children: [/*#__PURE__*/_jsx(NavBar, {\n      token: props.token\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: Style.chatAndRandomOnlineUserContaner,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: Style.UserContaner,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: Style.header,\n          children: /*#__PURE__*/_jsx(\"h1\", {\n            children: \"contacts\"\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: Style.listContacs,\n          children: listOfUsers.map(function (e) {\n            return /*#__PURE__*/_jsx(Users, {\n              setColorOfChat: setColorOfChatFn,\n              getUserdata: getUserdataFn,\n              userData: e\n            }, e._id);\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: Style.bottom,\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: Style.searchContainer,\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: Style.inputcss,\n              children: [/*#__PURE__*/_jsx(\"input\", {\n                onChange: function onChange(e) {\n                  return searchForUser(e);\n                },\n                type: \"text\",\n                required: true\n              }), /*#__PURE__*/_jsx(\"label\", {\n                children: /*#__PURE__*/_jsx(\"span\", {\n                  children: \"Search users\"\n                })\n              })]\n            })\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: Style.chat,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: Style.header,\n          children: /*#__PURE__*/_jsx(\"h1\", {\n            children: \"Messages\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: Style.chatContainer,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: Style.headerOfChatuserNameAndName,\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: Style.userImageContainer,\n              children: /*#__PURE__*/_jsx(\"img\", {\n                src: currentUserToChatWith.currentImageUrl || \"/avatar.png\"\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: Style.userName,\n              children: /*#__PURE__*/_jsx(\"h3\", {\n                children: currentUserToChatWith.userName\n              })\n            }), isWritingState && /*#__PURE__*/_jsx(\"div\", {\n              className: Style.isWritingContainer,\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: Style.ldsellipsis,\n                children: [/*#__PURE__*/_jsx(\"div\", {}), /*#__PURE__*/_jsx(\"div\", {}), /*#__PURE__*/_jsx(\"div\", {}), /*#__PURE__*/_jsx(\"div\", {})]\n              })\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: Style.changeColorContainer,\n              children: /*#__PURE__*/_jsx(ColorPicker, {\n                receiver: currentUserToChatWith._id,\n                token: props.token,\n                getNewColorfn: getNewColor,\n                chatColor: chatColor\n              })\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            onScroll: function onScroll(e) {\n              return scrollfn(e);\n            },\n            ref: messagesComp,\n            className: Style.messages,\n            children: currentChats.map(function (e) {\n              return /*#__PURE__*/_jsx(\"div\", {\n                className: Style.oneMessage,\n                children: e.users[0] == currentUserToChatWith._id ? /*#__PURE__*/_jsx(\"div\", {\n                  className: Style.messageText,\n                  \"text-data\": e.date != undefined ? e.date.slice(0, 10) + \" \" + e.date.slice(11, 16) : \"false\",\n                  style: {\n                    \"--i\": \"0%\",\n                    \"float\": \"left\",\n                    backgroundColor: \"#e4e6eb\",\n                    color: \"black\"\n                  },\n                  children: /*#__PURE__*/_jsx(\"p\", {\n                    children: e.message\n                  })\n                }) : /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"\".concat(Style.messageText, \" \").concat(Style.yourMessageVu, \" \"),\n                  \"text-data\": e.date != undefined ? e.date.slice(0, 10) + \" \" + e.date.slice(11, 16) : \"false\",\n                  style: {\n                    \"--i\": \"-100%\",\n                    \"float\": \"right\",\n                    backgroundColor: chatColor.colorone,\n                    color: \"white\"\n                  },\n                  children: [/*#__PURE__*/_jsx(\"p\", {\n                    children: e.message\n                  }), /*#__PURE__*/_jsx(\"span\", {\n                    style: e.seen == true ? {\n                      color: \"#1876f3\"\n                    } : {\n                      color: \"black\"\n                    },\n                    className: Style.seen,\n                    children: \"\\u2714\"\n                  })]\n                })\n              }, e._id);\n            })\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: Style.sendMessage,\n          children: /*#__PURE__*/_jsxs(\"form\", {\n            onSubmit: function onSubmit(e) {\n              return e.preventDefault();\n            },\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: Style.inputContainer,\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: Style.inputcss,\n                children: [/*#__PURE__*/_jsx(\"input\", {\n                  value: message,\n                  onChange: function onChange(e) {\n                    return messageHandler(e);\n                  },\n                  type: \"text\",\n                  required: true\n                }), /*#__PURE__*/_jsx(\"label\", {\n                  children: /*#__PURE__*/_jsx(\"span\", {\n                    children: \"Message\"\n                  })\n                })]\n              })\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: Style.btns,\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: Style.openOrCloseEmojiPicker,\n                onClick: function onClick() {\n                  return closeOrOpenEmojiPicker();\n                },\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: Style.emojiLogo,\n                  children: /*#__PURE__*/_jsx(Emoji, {\n                    emoji: {\n                      id: 'smiling_face_with_3_hearts',\n                      skin: 3\n                    },\n                    size: 16\n                  })\n                }), closeOrOpenEmojiPickerState && /*#__PURE__*/_jsx(\"div\", {\n                  className: Style.emojiPickerContainer,\n                  children: /*#__PURE__*/_jsx(Picker, {\n                    perLine: EmojiContainerHeight,\n                    onSelect: function onSelect(e) {\n                      return addEmoji(e);\n                    }\n                  })\n                })]\n              }), /*#__PURE__*/_jsx(\"button\", {\n                type: \"submit\",\n                className: Style.btnsend,\n                onClick: function onClick() {\n                  return sendMessage();\n                },\n                children: /*#__PURE__*/_jsx(\"span\", {\n                  className: Style.sendMessageBtn,\n                  children: /*#__PURE__*/_jsx(SentSvg, {})\n                })\n              })]\n            })]\n          })\n        })]\n      })]\n    })]\n  });\n};\n\nexport var __N_SSP = true;\nexport default chat;\n\nvar SentSvg = function SentSvg() {\n  return /*#__PURE__*/_jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 64 64\",\n    children: /*#__PURE__*/_jsxs(\"g\", {\n      id: \"Layer_95\",\n      \"data-name\": \"Layer 95\",\n      children: [/*#__PURE__*/_jsx(\"path\", {\n        d: \"M53.06,10.94a1.5,1.5,0,0,0-1.53-.36l-40,13.33a1.51,1.51,0,0,0-.06,2.83l18.7,7.09,7.09,18.7a1.51,1.51,0,0,0,1.44,1,1.49,1.49,0,0,0,1.39-1l13.33-40A1.5,1.5,0,0,0,53.06,10.94Z\"\n      }), /*#__PURE__*/_jsx(\"path\", {\n        d: \"M20.22,35.48a1.5,1.5,0,0,0-2.12-2.12l-4.48,4.48a1.51,1.51,0,0,0,0,2.12,1.49,1.49,0,0,0,2.12,0Z\"\n      }), /*#__PURE__*/_jsx(\"path\", {\n        d: \"M23.88,40.12a1.49,1.49,0,0,0-2.12,0L16.08,45.8a1.5,1.5,0,0,0,2.12,2.12l5.68-5.68A1.49,1.49,0,0,0,23.88,40.12Z\"\n      }), /*#__PURE__*/_jsx(\"path\", {\n        d: \"M28.52,43.78,24,48.26a1.5,1.5,0,0,0,2.12,2.12l4.48-4.48A1.5,1.5,0,0,0,28.52,43.78Z\"\n      })]\n    })\n  });\n};\n\nvar Users = function Users(props) {\n  var _React$useState19 = React.useState(props.userData.notSeenMessageNumber),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      notSeenMessageNumberlocal = _React$useState20[0],\n      setNotSeenMessageNumberlocal = _React$useState20[1];\n\n  React.useEffect(function () {\n    setNotSeenMessageNumberlocal(props.userData.notSeenMessageNumber);\n  }, [props.userData.notSeenMessageNumber]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: Style.userContainer,\n      onClick: function onClick() {\n        props.getUserdata(props.userData), setNotSeenMessageNumberlocal(0), props.setColorOfChat(props.userData.color);\n      },\n      children: [notSeenMessageNumberlocal != 0 && /*#__PURE__*/_jsx(\"div\", {\n        className: Style.notSeenMessageNumbe,\n        children: /*#__PURE__*/_jsx(\"span\", {\n          children: notSeenMessageNumberlocal\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.imgContainer,\n        children: /*#__PURE__*/_jsx(\"img\", {\n          src: props.userData.currentImageUrl || \"/avatar.png\"\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.userName,\n        children: /*#__PURE__*/_jsx(\"p\", {\n          children: props.userData.userName\n        })\n      })]\n    })\n  });\n};\n\nvar ColorPicker = function ColorPicker(props) {\n  var _React$useState21 = React.useState(false),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      openColorPicker = _React$useState22[0],\n      setOpenColorPicker = _React$useState22[1];\n\n  var changePrimaryColor = function changePrimaryColor(color) {\n    props.getNewColorfn(color);\n    updateColorChat({\n      newColor: color,\n      receiver: props.receiver\n    }, props.token);\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    onClick: function onClick() {\n      return setOpenColorPicker(function (e) {\n        return !e;\n      });\n    },\n    className: Style.chatColor,\n    style: {\n      backgroundColor: props.chatColor.colorone\n    },\n    children: openColorPicker && /*#__PURE__*/_jsxs(\"div\", {\n      className: Style.colorPicker,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: Style.color,\n        onClick: function onClick() {\n          return changePrimaryColor(\"#ff1744\");\n        },\n        style: {\n          backgroundColor: \"#ff1744\"\n        }\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.color,\n        onClick: function onClick() {\n          return changePrimaryColor(\"#f50057\");\n        },\n        style: {\n          backgroundColor: \"#f50057\"\n        }\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.color,\n        onClick: function onClick() {\n          return changePrimaryColor(\"#3d5afe\");\n        },\n        style: {\n          backgroundColor: \"#3d5afe\"\n        }\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.color,\n        onClick: function onClick() {\n          return changePrimaryColor(\"#76ff03\");\n        },\n        style: {\n          backgroundColor: \"#76ff03\"\n        }\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.color,\n        onClick: function onClick() {\n          return changePrimaryColor(\"#c6ff00\");\n        },\n        style: {\n          backgroundColor: \"#c6ff00\"\n        }\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.color,\n        onClick: function onClick() {\n          return changePrimaryColor(\"#ff3d00\");\n        },\n        style: {\n          backgroundColor: \"#ff3d00\"\n        }\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.color,\n        onClick: function onClick() {\n          return changePrimaryColor(\"#651fff\");\n        },\n        style: {\n          backgroundColor: \"#651fff\"\n        }\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.color,\n        onClick: function onClick() {\n          return changePrimaryColor(\"#ffea00\");\n        },\n        style: {\n          backgroundColor: \"#ffea00\"\n        }\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.color,\n        onClick: function onClick() {\n          return changePrimaryColor(\"#f50057\");\n        },\n        style: {\n          backgroundColor: \"#f50057\"\n        }\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.color,\n        onClick: function onClick() {\n          return changePrimaryColor(\"#ff1744\");\n        },\n        style: {\n          backgroundColor: \"#ff1744\"\n        }\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.color,\n        onClick: function onClick() {\n          return changePrimaryColor(\"#1de9b6\");\n        },\n        style: {\n          backgroundColor: \"#1de9b6\"\n        }\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.color,\n        onClick: function onClick() {\n          return changePrimaryColor(\"#03a9f4\");\n        },\n        style: {\n          backgroundColor: \"#03a9f4\"\n        }\n      })]\n    })\n  });\n};","map":null,"metadata":{},"sourceType":"module"}