{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"F:/AHKI/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:/AHKI/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"F:\\\\AHKI\\\\components\\\\profileSettings\\\\Email\\\\Email.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Style from './Email.module.scss';\nimport Toast from '../../Toast/Toast';\nimport { updateEmailSendCode, updateEmailApi } from '../../../services/user';\nimport UserContext from '../../../context/userContext';\nimport LanguageContext from '../../../context/languageContext';\nimport Link from 'next/link';\n\nvar Email = function Email() {\n  _s();\n\n  var _React$useState = React.useState({\n    state: false,\n    message: \"\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      toastMessage = _React$useState2[0],\n      setToastMessage = _React$useState2[1];\n\n  var _React$useContext = React.useContext(UserContext),\n      _React$useContext2 = _slicedToArray(_React$useContext, 2),\n      user = _React$useContext2[0],\n      setUser = _React$useContext2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      changeEamilData = _React$useState4[0],\n      setChangeEamilData = _React$useState4[1];\n\n  var _React$useContext3 = React.useContext(LanguageContext),\n      _React$useContext4 = _slicedToArray(_React$useContext3, 2),\n      language = _React$useContext4[0],\n      setLanguage = _React$useContext4[1];\n\n  React.useEffect(function () {\n    if (toastMessage.state == true) {\n      setTimeout(function () {\n        setToastMessage({\n          state: false,\n          message: \"\"\n        });\n      }, 6000);\n    }\n  }, [toastMessage]);\n\n  var changeHandlerNewEamilAndCode = function changeHandlerNewEamilAndCode(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setChangeEamilData(function (e) {\n      return _objectSpread(_objectSpread({}, e), {}, _defineProperty({}, name, value));\n    });\n  };\n\n  var sendCode = function sendCode() {\n    updateEmailSendCode(changeEamilData.email, user.token).then(function (result) {\n      setToastMessage({\n        state: true,\n        message: \"ab3eth sex\"\n      });\n    });\n  };\n\n  var updateEmail = function updateEmail() {\n    updateEmailApi(changeEamilData.email, changeEamilData.code, user.token).then(function (result) {\n      if (result.data.typeError == \"incorectCode\") {\n        setToastMessage({\n          state: true,\n          message: \"ab3eth sex\"\n        });\n      } else if (result.data.typeError == \"codeInvalid\") {\n        setToastMessage({\n          state: true,\n          message: \"ab3eth sex\"\n        });\n      } else if (result.data.typeError == \"done\") {\n        setToastMessage({\n          state: true,\n          message: \"ab3eth sex\"\n        });\n      }\n    })[\"catch\"](function (error) {\n      setToastMessage({\n        state: true,\n        message: error.message\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.container,\n    children: [toastMessage.state && /*#__PURE__*/_jsxDEV(Toast, {\n      text: toastMessage.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 34\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.header,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: language.UpdateYourEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 43\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.centerInputs,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.warningText,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: language.putyournewEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 52\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.emailContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.inputContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            onChange: function onChange(e) {\n              return changeHandlerNewEamilAndCode(e);\n            },\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 93\n          }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: language.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 176\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 55\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return sendCode();\n          },\n          children: language.send\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 213\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.warningText,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: language.YouWillreciveconfermationCodeputithereAndClickUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 52\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: function onChange(e) {\n            return changeHandlerNewEamilAndCode(e);\n          },\n          name: \"code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 55\n        }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: language.ConfermationCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 136\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.btn,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return updateEmail();\n        },\n        children: language.update\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 40\n      }, _this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/profile\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: language.cancel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 124\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 102\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Email, \"El32k6FSotdA5OrPp0NVbVQ1TW8=\");\n\n_c = Email;\nexport default Email;\n\nvar _c;\n\n$RefreshReg$(_c, \"Email\");","map":{"version":3,"sources":["F:/AHKI/components/profileSettings/Email/Email.js"],"names":["React","Style","Toast","updateEmailSendCode","updateEmailApi","UserContext","LanguageContext","Link","Email","useState","state","message","toastMessage","setToastMessage","useContext","user","setUser","changeEamilData","setChangeEamilData","language","setLanguage","useEffect","setTimeout","changeHandlerNewEamilAndCode","e","target","name","value","sendCode","email","token","then","result","updateEmail","code","data","typeError","error","container","header","UpdateYourEmail","centerInputs","warningText","putyournewEmail","emailContainer","inputContainer","send","YouWillreciveconfermationCodeputithereAndClickUpdate","ConfermationCode","btn","update","cancel"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Style from './Email.module.scss'\r\nimport Toast from '../../Toast/Toast'\r\nimport {updateEmailSendCode,updateEmailApi} from '../../../services/user'\r\nimport UserContext from '../../../context/userContext'\r\nimport LanguageContext from '../../../context/languageContext'\r\nimport Link from 'next/link'\r\n\r\n\r\nconst Email = () => {\r\n    const [toastMessage,setToastMessage]=React.useState({state:false,message:\"\"})\r\n    const [user,setUser]=React.useContext(UserContext)\r\n    const [changeEamilData,setChangeEamilData]=React.useState(\"\")\r\n    const [language , setLanguage]=React.useContext(LanguageContext)\r\n\r\n\r\n    React.useEffect(()=>{\r\n     if(toastMessage.state==true){\r\n         setTimeout(() => {\r\n             setToastMessage({state:false,message:\"\"})\r\n         }, 6000);\r\n     }\r\n    },[toastMessage])\r\n    const changeHandlerNewEamilAndCode=(e)=>{\r\n        const {name,value}=e.target\r\n        setChangeEamilData(e=>{\r\n            return {...e,[name]:value}\r\n        })\r\n    }\r\n    const sendCode=()=>{\r\n        updateEmailSendCode(changeEamilData.email,user.token).then(result=>{\r\n            setToastMessage({state:true,message:\"ab3eth sex\"})\r\n        })\r\n    }\r\n    const updateEmail=()=>{\r\n        updateEmailApi(changeEamilData.email,changeEamilData.code,user.token).then(result=>{\r\n            if(result.data.typeError==\"incorectCode\"){\r\n                setToastMessage({state:true,message:\"ab3eth sex\"})\r\n            }else if(result.data.typeError==\"codeInvalid\"){\r\n                setToastMessage({state:true,message:\"ab3eth sex\"})\r\n            }else if(result.data.typeError==\"done\"){\r\n                setToastMessage({state:true,message:\"ab3eth sex\"})\r\n            }\r\n        }).catch(error=>{\r\n            setToastMessage({state:true,message:error.message})\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className={Style.container}>\r\n            {toastMessage.state&&<Toast text={toastMessage.message} ></Toast>}\r\n            <div className={Style.header}><h1>{language.UpdateYourEmail}</h1></div>\r\n            <div className={Style.centerInputs}>\r\n                <div className={Style.warningText}><h1>{language.putyournewEmail}</h1></div>\r\n                <div className={Style.emailContainer}><div className={Style.inputContainer}><input type=\"email\"  onChange={(e)=>changeHandlerNewEamilAndCode(e)} name=\"email\"/><label>{language.email}</label></div><button onClick={()=>sendCode()}>{language.send}</button></div>\r\n                <div className={Style.warningText}><h1>{language.YouWillreciveconfermationCodeputithereAndClickUpdate}</h1></div>  \r\n                <div className={Style.inputContainer}><input type=\"text\"  onChange={(e)=>changeHandlerNewEamilAndCode(e)} name=\"code\"/><label>{language.ConfermationCode}</label></div>\r\n            </div>\r\n            <div className={Style.btn}><button onClick={()=>updateEmail()}>{language.update}</button><Link href=\"/profile\"><button>{language.cancel}</button></Link></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Email\r\n"]},"metadata":{},"sourceType":"module"}