{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\AHKI\\\\pages\\\\chat.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Style from '../styles/chat.module.scss';\nimport NavBar from '../components/navBar/NavBar';\nimport { Picker, Emoji } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { searchUserNameApi } from '../services/user';\nimport { addMessage, getMessagesOfCurrentconversation, getUserWhoChatWith } from '../services/chat';\nimport socketContext from '../context/socketContext';\nimport userContext from '../context/userContext';\n\nconst chat = props => {\n  const [closeOrOpenEmojiPickerState, setcloseOrOpenEmojiPickerState] = React.useState(false);\n  const [EmojiContainerHeight, setEmojiContainerHeight] = React.useState(9); //responsive handler\n\n  const [listOfUsers, setListOfUsers] = React.useState([]);\n  const [currentUserToChatWith, setCurrentUserToChatWith] = React.useState({\n    currentImageUrl: undefined,\n    userName: undefined,\n    _id: undefined\n  });\n  const [message, setMessage] = React.useState(\"\");\n  const [currentChats, setCurrentChats] = React.useState([]);\n  const messagesComp = React.useRef(null);\n  const [user, setUser] = React.useContext(userContext);\n  const [socket, setSocket] = React.useContext(socketContext);\n  const [skip, setSkip] = React.useState(() => 0);\n  const [isWritingState, setIsWritingState] = React.useState(false);\n  React.useEffect(() => {\n    if (user._id != undefined && user._id.length > 2) getUserWhoChatWith({}, props.token).then(result => {\n      let newUserWhoChatWith = result.data.data.map(e => {\n        if (e.firstUser._id == user._id) {\n          return Promise.resolve(_objectSpread(_objectSpread({}, e.secoundUser), {}, {\n            notSeenMessageNumber: e.notSeenMessageNumber\n          }));\n        } else {\n          return Promise.resolve(_objectSpread(_objectSpread({}, e.firstUser), {}, {\n            notSeenMessageNumber: e.notSeenMessageNumber\n          }));\n        }\n      });\n      Promise.all(newUserWhoChatWith).then(newarray => {\n        setListOfUsers([...newarray]);\n      });\n    }).catch(e => console.log(e.message));\n  }, [user]);\n  React.useEffect(() => {\n    if (currentUserToChatWith._id != undefined) {\n      getMessagesOfCurrentconversation({\n        secondUser: currentUserToChatWith._id,\n        skip: 0\n      }, props.token).then(data => {\n        setCurrentChats([...data.data.data.reverse()]);\n        messagesComp.current.scrollTop = messagesComp.current.scrollHeight + messagesComp.current.clientHeight;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }, [currentUserToChatWith]);\n\n  const addEmoji = e => {\n    let sym = e.unified.split('-');\n    let codesArray = [];\n    sym.forEach(el => codesArray.push('0x' + el));\n    let emoji = String.fromCodePoint(...codesArray);\n    setMessage(el => {\n      return el + emoji;\n    });\n  };\n\n  const closeOrOpenEmojiPicker = () => {\n    setcloseOrOpenEmojiPickerState(e => !e);\n  };\n\n  const searchForUser = e => {\n    searchUserNameApi(e.target.value, props.token).then(result => {\n      if (result.data.data != undefined) {\n        setListOfUsers(e => {\n          return [...result.data.data];\n        });\n      }\n    });\n  };\n\n  const getUserdataFn = currentUserData => {\n    setCurrentUserToChatWith(currentUserData);\n  };\n\n  const sendMessage = () => {\n    if (message.length > 0 && currentUserToChatWith._id != undefined) {\n      addMessage({\n        receiver: currentUserToChatWith._id,\n        message: message,\n        FirstTime: currentChats.length\n      }, props.token).then(data => {\n        setCurrentChats(e => {\n          let r = Math.random().toString(36).substring(7);\n          return [...e, {\n            users: [user._id],\n            message: message,\n            _id: r\n          }];\n        });\n        messagesComp.current.scrollTop = messagesComp.current.scrollHeight + messagesComp.current.clientHeight;\n        socket.emit(\"sendMessageFromUserToUser\", {\n          otherUserId: currentUserToChatWith._id,\n          text: message,\n          senderId: user._id\n        });\n        setMessage(\"\");\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const messageHandler = e => {\n    if (currentUserToChatWith._id != undefined) {\n      if (e.target.value.length > 0) {\n        socket.emit(\"isWriting\", {\n          isWriting: true,\n          otherUserId: currentUserToChatWith._id\n        });\n      } else {\n        socket.emit(\"isWriting\", {\n          isWriting: false,\n          otherUserId: currentUserToChatWith._id\n        });\n      }\n    }\n\n    setMessage(e.target.value);\n  };\n\n  React.useEffect(() => {\n    async function chatHandler(data) {\n      let audio = new Audio(\"./msgSound.mp3\");\n      audio.play();\n      let ListOfUser = await listOfUsers.map(e => {\n        if (data.senderId == e._id && currentUserToChatWith._id != e._id) {\n          e.notSeenMessageNumber = e.notSeenMessageNumber + 1;\n          return Promise.resolve(e);\n        } else {\n          return Promise.resolve(e);\n        }\n      });\n      Promise.all(ListOfUser).then(data => {\n        setListOfUsers(data);\n      });\n\n      if (data.senderId == currentUserToChatWith._id) {\n        setCurrentChats(e => {\n          let r = Math.random().toString(36).substring(7);\n          return [...e, {\n            users: [data.senderId],\n            message: data.text,\n            _id: r\n          }];\n        });\n        messagesComp.current.scrollTop = messagesComp.current.scrollHeight + messagesComp.current.clientHeight;\n      } else {}\n    }\n\n    function isWriting(data) {\n      setIsWritingState(data.isWriting);\n    }\n\n    if (socket != undefined && socket != null) {\n      socket.on(\"isWritingState\", isWriting);\n      socket.on(\"getMessageFromUserToUser\", chatHandler);\n    }\n\n    return () => {\n      if (socket != undefined && socket != null) {\n        socket.off('getMessageFromUserToUser', chatHandler);\n        socket.off(\"isWritingState\", isWriting);\n      }\n    };\n  });\n\n  const scrollfn = e => {\n    //if( e.target.scrollTop === (e.target.scrollHeight - e.target.offsetHeight)){\n    if (e.target.scrollTop === 0) {\n      setSkip(e => e + 20);\n    }\n  };\n\n  React.useEffect(() => {\n    getMessagesOfCurrentconversation({\n      secondUser: currentUserToChatWith._id,\n      skip: skip\n    }, props.token).then(data => {\n      setCurrentChats(e => [...data.data.data.reverse(), ...e]);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [skip]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.container,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      token: props.token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.chatAndRandomOnlineUserContaner,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.UserContaner,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.header,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"contacts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.listContacs,\n          children: listOfUsers.map(e => /*#__PURE__*/_jsxDEV(Users, {\n            getUserdata: getUserdataFn,\n            userData: e\n          }, e._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 45\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.bottom,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.searchContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.inputcss,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => searchForUser(e),\n                type: \"text\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 96\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Search users\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 172\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 165\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.chat,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.header,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.chatContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: Style.headerOfChatuserNameAndName,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.userImageContainer,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: currentUserToChatWith.currentImageUrl || \"/avatar.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 71\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.userName,\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: currentUserToChatWith.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onScroll: e => scrollfn(e),\n            ref: messagesComp,\n            className: Style.messages,\n            children: [currentChats.map(e => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: Style.oneMessage,\n                children: e.users[0] == currentUserToChatWith._id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: Style.messageText,\n                  \"text-data\": e.date != undefined ? e.date.slice(0, 10) + \" \" + e.date.slice(11, 16) : false,\n                  style: {\n                    \"--i\": \"0%\",\n                    float: \"left\",\n                    backgroundColor: \"#e4e6eb\",\n                    color: \"black\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: e.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 226\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: Style.messageText,\n                  \"text-data\": e.date != undefined ? e.date.slice(0, 10) + \" \" + e.date.slice(11, 16) : false,\n                  style: {\n                    \"--i\": \"-100%\",\n                    float: \"right\",\n                    backgroundColor: \"#1876f3\",\n                    color: \"white\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: e.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 230\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 37\n                }, this)\n              }, e._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 40\n              }, this);\n            }), isWritingState && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"is writing....\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Style.sendMessage,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => e.preventDefault(),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.inputContainer,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: Style.inputcss,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  value: message,\n                  onChange: e => messageHandler(e),\n                  type: \"text\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 95\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Message\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 188\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 181\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Style.btns,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: Style.openOrCloseEmojiPicker,\n                onClick: () => closeOrOpenEmojiPicker(),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: Style.emojiLogo,\n                  children: /*#__PURE__*/_jsxDEV(Emoji, {\n                    emoji: {\n                      id: 'smiling_face_with_3_hearts',\n                      skin: 3\n                    },\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 58\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 25\n                }, this), closeOrOpenEmojiPickerState && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: Style.emojiPickerContainer,\n                  children: /*#__PURE__*/_jsxDEV(Picker, {\n                    perLine: EmojiContainerHeight,\n                    onSelect: e => addEmoji(e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 99\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: Style.btnsend,\n                onClick: () => sendMessage(),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: Style.sendMessageBtn,\n                  children: /*#__PURE__*/_jsxDEV(SentSvg, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 145\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 105\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n};\n\nexport default chat;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  return req.cookies.token ? {\n    props: {\n      token: req.cookies.token\n    }\n  } : {\n    props: {\n      token: false\n    }\n  };\n}\n\nconst SentSvg = () => {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 64 64\",\n    children: /*#__PURE__*/_jsxDEV(\"g\", {\n      id: \"Layer_95\",\n      \"data-name\": \"Layer 95\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M53.06,10.94a1.5,1.5,0,0,0-1.53-.36l-40,13.33a1.51,1.51,0,0,0-.06,2.83l18.7,7.09,7.09,18.7a1.51,1.51,0,0,0,1.44,1,1.49,1.49,0,0,0,1.39-1l13.33-40A1.5,1.5,0,0,0,53.06,10.94Z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 107\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M20.22,35.48a1.5,1.5,0,0,0-2.12-2.12l-4.48,4.48a1.51,1.51,0,0,0,0,2.12,1.49,1.49,0,0,0,2.12,0Z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 291\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M23.88,40.12a1.49,1.49,0,0,0-2.12,0L16.08,45.8a1.5,1.5,0,0,0,2.12,2.12l5.68-5.68A1.49,1.49,0,0,0,23.88,40.12Z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 397\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M28.52,43.78,24,48.26a1.5,1.5,0,0,0,2.12,2.12l4.48-4.48A1.5,1.5,0,0,0,28.52,43.78Z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 518\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 69\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 9\n  }, this);\n};\n\nconst Users = props => {\n  const [notSeenMessageNumberlocal, setNotSeenMessageNumberlocal] = React.useState(props.userData.notSeenMessageNumber);\n  React.useEffect(() => {\n    setNotSeenMessageNumberlocal(props.userData.notSeenMessageNumber);\n  }, [props.userData.notSeenMessageNumber]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.userContainer,\n      onClick: () => {\n        props.getUserdata(props.userData), setNotSeenMessageNumberlocal(0);\n      },\n      children: [notSeenMessageNumberlocal != 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.notSeenMessageNumbe,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: notSeenMessageNumberlocal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 91\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.imgContainer,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.userData.currentImageUrl || \"/avatar.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.userName,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.userData.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["F:/AHKI/pages/chat.js"],"names":["React","Style","NavBar","Picker","Emoji","searchUserNameApi","addMessage","getMessagesOfCurrentconversation","getUserWhoChatWith","socketContext","userContext","chat","props","closeOrOpenEmojiPickerState","setcloseOrOpenEmojiPickerState","useState","EmojiContainerHeight","setEmojiContainerHeight","listOfUsers","setListOfUsers","currentUserToChatWith","setCurrentUserToChatWith","currentImageUrl","undefined","userName","_id","message","setMessage","currentChats","setCurrentChats","messagesComp","useRef","user","setUser","useContext","socket","setSocket","skip","setSkip","isWritingState","setIsWritingState","useEffect","length","token","then","result","newUserWhoChatWith","data","map","e","firstUser","Promise","resolve","secoundUser","notSeenMessageNumber","all","newarray","catch","console","log","secondUser","reverse","current","scrollTop","scrollHeight","clientHeight","error","addEmoji","sym","unified","split","codesArray","forEach","el","push","emoji","String","fromCodePoint","closeOrOpenEmojiPicker","searchForUser","target","value","getUserdataFn","currentUserData","sendMessage","receiver","FirstTime","r","Math","random","toString","substring","users","emit","otherUserId","text","senderId","messageHandler","isWriting","chatHandler","audio","Audio","play","ListOfUser","on","off","scrollfn","container","chatAndRandomOnlineUserContaner","UserContaner","header","listContacs","bottom","searchContainer","inputcss","chatContainer","headerOfChatuserNameAndName","userImageContainer","messages","oneMessage","messageText","date","slice","float","backgroundColor","color","preventDefault","inputContainer","btns","openOrCloseEmojiPicker","emojiLogo","id","skin","emojiPickerContainer","btnsend","sendMessageBtn","getServerSideProps","req","res","cookies","SentSvg","Users","notSeenMessageNumberlocal","setNotSeenMessageNumberlocal","userData","userContainer","getUserdata","notSeenMessageNumbe","imgContainer"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Style from '../styles/chat.module.scss'\r\nimport NavBar from '../components/navBar/NavBar'\r\nimport { Picker,Emoji  } from 'emoji-mart'\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport {searchUserNameApi} from '../services/user'\r\nimport {addMessage,getMessagesOfCurrentconversation,getUserWhoChatWith} from '../services/chat';\r\nimport socketContext from '../context/socketContext'\r\nimport userContext from '../context/userContext'\r\n\r\n\r\nconst chat = (props) => {\r\n    const [closeOrOpenEmojiPickerState,setcloseOrOpenEmojiPickerState]=React.useState(false)\r\n    const [EmojiContainerHeight, setEmojiContainerHeight] = React.useState(9)//responsive handler\r\n    const [listOfUsers,setListOfUsers]=React.useState([])\r\n    const [currentUserToChatWith,setCurrentUserToChatWith]=React.useState({currentImageUrl:undefined,userName:undefined,_id:undefined})\r\n    const [message,setMessage]=React.useState(\"\")\r\n    const [currentChats,setCurrentChats]=React.useState([])\r\n    const messagesComp=React.useRef(null)\r\n    const [user,setUser]=React.useContext(userContext)\r\n    const [socket,setSocket]=React.useContext(socketContext)\r\n    const [skip,setSkip]=React.useState(()=>0)\r\n    const [isWritingState,setIsWritingState]=React.useState(false)\r\n \r\n\r\n    React.useEffect(()=>{\r\n        if(user._id!=undefined&& user._id.length>2)\r\n        getUserWhoChatWith({},props.token).then(result=>{\r\n            let newUserWhoChatWith=result.data.data.map(e=>{\r\n                if(e.firstUser._id==user._id){\r\n                    return Promise.resolve({...e.secoundUser,notSeenMessageNumber:e.notSeenMessageNumber})\r\n                }else{\r\n                    return Promise.resolve({...e.firstUser,notSeenMessageNumber:e.notSeenMessageNumber})\r\n                }\r\n           \r\n               \r\n            })\r\n            Promise.all(newUserWhoChatWith).then(newarray=>{\r\n              setListOfUsers([...newarray])\r\n            })\r\n         \r\n          }).catch(e=>console.log(e.message))\r\n    },[user])\r\n    React.useEffect(()=>{\r\n        if(currentUserToChatWith._id!=undefined){\r\n            getMessagesOfCurrentconversation({secondUser:currentUserToChatWith._id,skip:0},props.token).then(data=>{\r\n                setCurrentChats([...data.data.data.reverse()])\r\n                messagesComp.current.scrollTop=messagesComp.current.scrollHeight+ messagesComp.current.clientHeight;\r\n\r\n\r\n            }).catch(error=>{\r\n                console.log(error)\r\n            })\r\n        }\r\n  \r\n    \r\n    \r\n    },[currentUserToChatWith])\r\n    const addEmoji=(e)=>{\r\n        let sym = e.unified.split('-')\r\n        let codesArray = []\r\n        sym.forEach(el => codesArray.push('0x' + el))\r\n        let emoji = String.fromCodePoint(...codesArray)\r\n        setMessage(el=>{return el+emoji})\r\n      };\r\n    const closeOrOpenEmojiPicker=()=>{\r\n        setcloseOrOpenEmojiPickerState(e=>!e)\r\n      }\r\n      const searchForUser=(e)=>{\r\n            searchUserNameApi(e.target.value,props.token).then((result=>{\r\n                if(result.data.data!=undefined){\r\n                    setListOfUsers(e=>{\r\n                        return [...result.data.data]\r\n                    }) \r\n                }\r\n            }))\r\n        \r\n      }\r\n      const getUserdataFn=(currentUserData)=>{\r\n        setCurrentUserToChatWith(currentUserData)\r\n      }\r\n      const sendMessage=()=>{\r\n        if(message.length>0&&currentUserToChatWith._id!=undefined){\r\n        addMessage({receiver:currentUserToChatWith._id,message:message,FirstTime:currentChats.length},props.token).then(data=>{\r\n            setCurrentChats(e=>{\r\n                let r = Math.random().toString(36).substring(7);\r\n                return [...e,{users:[user._id],message:message,_id:r}]\r\n\r\n            })\r\n            \r\n            messagesComp.current.scrollTop=messagesComp.current.scrollHeight+ messagesComp.current.clientHeight;\r\n\r\n                socket.emit(\"sendMessageFromUserToUser\",{otherUserId:currentUserToChatWith._id,text:message,senderId:user._id})\r\n\r\n          \r\n\r\n            setMessage(\"\")\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n      }\r\n      const messageHandler=(e)=>{\r\n          if(currentUserToChatWith._id!=undefined){\r\n            if(e.target.value.length>0){\r\n                socket.emit(\"isWriting\",{isWriting:true,otherUserId:currentUserToChatWith._id})\r\n              }else{\r\n                socket.emit(\"isWriting\",{isWriting:false,otherUserId:currentUserToChatWith._id})\r\n              }\r\n          }\r\n \r\n        setMessage(e.target.value)\r\n      }\r\n      React.useEffect(()=>{\r\n        async  function  chatHandler(data){\r\n\r\n            let audio = new Audio(\"./msgSound.mp3\")\r\n            audio.play()\r\n            let ListOfUser = await listOfUsers.map((e)=>{\r\n                if(data.senderId==e._id && currentUserToChatWith._id!=e._id){\r\n                    e.notSeenMessageNumber=e.notSeenMessageNumber+1\r\n                    return Promise.resolve(e)\r\n                }else{\r\n                    return Promise.resolve(e)\r\n                }\r\n            })\r\n            Promise.all(ListOfUser).then(data=>{\r\n                \r\n                setListOfUsers(data)\r\n            })\r\n            if(data.senderId==currentUserToChatWith._id){\r\n                \r\n\r\n                setCurrentChats(e=>{\r\n                    let r = Math.random().toString(36).substring(7);\r\n                    return [...e,{users:[data.senderId],message:data.text,_id:r}]\r\n                })\r\n                messagesComp.current.scrollTop=messagesComp.current.scrollHeight+ messagesComp.current.clientHeight;\r\n\r\n            }else{\r\n\r\n            }\r\n        }\r\n        function isWriting(data){\r\n            \r\n            setIsWritingState(data.isWriting)\r\n        }\r\n        if(socket!=undefined && socket!=null){\r\n        socket.on(\"isWritingState\",isWriting)\r\n\r\n        socket.on(\"getMessageFromUserToUser\",chatHandler)\r\n          }\r\n          return () => {\r\n            if(socket!=undefined && socket!=null){\r\n                socket.off('getMessageFromUserToUser', chatHandler);\r\n                socket.off(\"isWritingState\",isWriting)\r\n\r\n            }\r\n          }\r\n      })\r\n      const scrollfn=(e)=>{\r\n          //if( e.target.scrollTop === (e.target.scrollHeight - e.target.offsetHeight)){\r\n          if( e.target.scrollTop === 0){\r\n            setSkip(e=>e+20)\r\n          }\r\n          \r\n      }\r\n      React.useEffect(()=>{\r\n          \r\n        getMessagesOfCurrentconversation({secondUser:currentUserToChatWith._id,skip:skip},props.token).then(data=>{\r\n            setCurrentChats(e=>[...data.data.data.reverse(),...e])\r\n           \r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n      },[skip])\r\n    return (\r\n        <div className={Style.container} >\r\n                  <NavBar token={props.token}></NavBar>\r\n                <div className={Style.chatAndRandomOnlineUserContaner}>\r\n                    <div className={Style.UserContaner}>\r\n                        <div className={Style.header}>\r\n                            <h1>contacts</h1>\r\n                        </div>\r\n                        <div className={Style.listContacs}>\r\n                        {listOfUsers.map(e=><Users getUserdata={getUserdataFn} key={e._id} userData={e}></Users>)}\r\n\r\n                        </div>\r\n                        <div className={Style.bottom}>\r\n                        <div className={Style.searchContainer}><div className={Style.inputcss}><input onChange={(e)=>searchForUser(e)} type=\"text\" required></input><label><span>Search users</span></label></div></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={Style.chat}>\r\n                    <div className={Style.header}>\r\n                        <h1>Messages</h1>\r\n                    </div>\r\n                    <div className={Style.chatContainer}>\r\n                        <div className={Style.headerOfChatuserNameAndName}>\r\n                            <div className={Style.userImageContainer}><img src={currentUserToChatWith.currentImageUrl || \"/avatar.png\"} /></div>\r\n                            <div className={Style.userName}><h3>{currentUserToChatWith.userName}</h3></div>\r\n                        </div>\r\n                        <div onScroll={(e)=>scrollfn(e)} ref={messagesComp} className={Style.messages}>\r\n                            {currentChats.map(e=>{\r\n                                return(<div key={e._id} className={Style.oneMessage}>\r\n                                    {e.users[0]==currentUserToChatWith._id?\r\n                                    <div className={Style.messageText} text-data={e.date!=undefined?e.date.slice(0,10)+\" \"+e.date.slice(11,16):false}  style={{\"--i\":\"0%\",float:\"left\",backgroundColor:\"#e4e6eb\",color:\"black\"}}><p>{e.message}</p></div>:\r\n                                    <div className={Style.messageText} text-data={e.date!=undefined?e.date.slice(0,10)+\" \"+e.date.slice(11,16):false}  style={{\"--i\":\"-100%\",float:\"right\",backgroundColor:\"#1876f3\",color:\"white\"}}><p>{e.message}</p></div>\r\n                                    }\r\n                                </div>)\r\n                            })}\r\n                            {isWritingState&&<p>is writing....</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={Style.sendMessage}>\r\n                        <form onSubmit={e=>e.preventDefault()} >\r\n                        <div className={Style.inputContainer}><div className={Style.inputcss}><input value={message} onChange={(e)=>messageHandler(e)} type=\"text\" required></input><label><span>Message</span></label></div></div>\r\n                        <div className={Style.btns}>\r\n                        <div className={Style.openOrCloseEmojiPicker} onClick={()=>closeOrOpenEmojiPicker()}>\r\n                        <div className={Style.emojiLogo}><Emoji emoji={{ id: 'smiling_face_with_3_hearts', skin: 3 }} size={16} /></div>\r\n                        {closeOrOpenEmojiPickerState&&<div className={Style.emojiPickerContainer}><Picker perLine={EmojiContainerHeight} onSelect={(e)=>addEmoji(e)} /></div>}\r\n                        </div>\r\n                            <button type=\"submit\" className={Style.btnsend} onClick={()=>sendMessage()}><span className={Style.sendMessageBtn} ><SentSvg></SentSvg></span></button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default chat\r\nexport async function getServerSideProps({ req, res }) {\r\n    return req.cookies.token ? { props: { token: req.cookies.token } } : { props: { token: false } }\r\n  }\r\n\r\n  const SentSvg=()=>{\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\"><g id=\"Layer_95\" data-name=\"Layer 95\"><path d=\"M53.06,10.94a1.5,1.5,0,0,0-1.53-.36l-40,13.33a1.51,1.51,0,0,0-.06,2.83l18.7,7.09,7.09,18.7a1.51,1.51,0,0,0,1.44,1,1.49,1.49,0,0,0,1.39-1l13.33-40A1.5,1.5,0,0,0,53.06,10.94Z\"/><path d=\"M20.22,35.48a1.5,1.5,0,0,0-2.12-2.12l-4.48,4.48a1.51,1.51,0,0,0,0,2.12,1.49,1.49,0,0,0,2.12,0Z\"/><path d=\"M23.88,40.12a1.49,1.49,0,0,0-2.12,0L16.08,45.8a1.5,1.5,0,0,0,2.12,2.12l5.68-5.68A1.49,1.49,0,0,0,23.88,40.12Z\"/><path d=\"M28.52,43.78,24,48.26a1.5,1.5,0,0,0,2.12,2.12l4.48-4.48A1.5,1.5,0,0,0,28.52,43.78Z\"/></g></svg>\r\n        )\r\n  }\r\n  const Users=(props)=>{\r\n      const [notSeenMessageNumberlocal,setNotSeenMessageNumberlocal]=React.useState(props.userData.notSeenMessageNumber)\r\n      React.useEffect(()=>{\r\n        setNotSeenMessageNumberlocal(props.userData.notSeenMessageNumber)\r\n      },[props.userData.notSeenMessageNumber])\r\n    return(\r\n        <div><div className={Style.userContainer} onClick={()=>{props.getUserdata(props.userData),setNotSeenMessageNumberlocal(0)}}>\r\n                {notSeenMessageNumberlocal!=0&&<div className={Style.notSeenMessageNumbe}><span>{notSeenMessageNumberlocal}</span></div>}\r\n                <div  className={Style.imgContainer}><img src={props.userData.currentImageUrl || \"/avatar.png\"} /></div>\r\n                <div  className={Style.userName}><p>{props.userData.userName}</p></div>\r\n        </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}