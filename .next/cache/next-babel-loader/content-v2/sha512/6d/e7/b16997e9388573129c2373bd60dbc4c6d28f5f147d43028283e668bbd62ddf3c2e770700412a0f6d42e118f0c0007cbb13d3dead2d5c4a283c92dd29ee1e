{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\AHKI\\\\components\\\\modalSingInSingUp\\\\ModalSingInSingUp.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport Style from './ModalSingInSingUp.module.scss';\nimport 'react-phone-input-2/lib/material.css';\nimport PopUpMessage from '../popUpMessage/popUpMessage';\nimport SingIn from './singIn/singIn';\nimport SingUp from './singUp/singUp';\nimport VerifyAccount from '../verifyAccount/verifyAccount';\nimport ChangeLanguage from '../changeLanguage/changeLanguage';\n\nconst ModalSingInSingUp = props => {\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState({\n    state: false,\n    text: \"\"\n  }); // when state true show  pop up \n\n  const {\n    0: showSingIn_Or_SHowSingUp,\n    1: setShowSingIn_Or_SHowSingUp\n  } = useState(true);\n  /*change between sing in and sing up */\n\n  const {\n    0: verifiedAccountModal,\n    1: setverifiedAccountModal\n  } = useState(false); //when trye open modal to put the code\n\n  const {\n    0: userId,\n    1: setUserId\n  } = useState(\"\");\n\n  const fnsetShowSingIn_Or_SHowSingUp = () => {\n    setShowSingIn_Or_SHowSingUp(e => !e);\n  };\n\n  const closeModal = () => {\n    props.openOrcloseModal();\n  };\n\n  const closePopUp = () => {\n    setErrorMessage({\n      state: false,\n      text: \"\"\n    });\n  };\n\n  const setErrorMessagefn = e => {\n    setErrorMessage(_objectSpread({}, e));\n  };\n\n  const openVerifieAccountModalfn = userid => {\n    setUserId(userid);\n    setverifiedAccountModal(e => !e);\n  };\n  /***test */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.contrainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.waveContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), errorMessage.state == true && /*#__PURE__*/_jsxDEV(PopUpMessage, {\n      fnclose: closePopUp,\n      openPopUp: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.changelang,\n      children: /*#__PURE__*/_jsxDEV(ChangeLanguage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Style.formContainer,\n      children: [verifiedAccountModal && /*#__PURE__*/_jsxDEV(VerifyAccount, {\n        setErrorMessageProps: setErrorMessagefn,\n        userId: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.closebtn,\n        onClick: () => closeModal()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: Style.formsContainer,\n        children: [/*#__PURE__*/_jsxDEV(SingIn, {\n          openVerifieAccountModal: openVerifieAccountModalfn,\n          setErrorMessageProps: setErrorMessagefn,\n          showSingIn_Or_SHowSingUp: showSingIn_Or_SHowSingUp,\n          fnshowSingInOrSingUp: fnsetShowSingIn_Or_SHowSingUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SingUp, {\n          openVerifieAccountModal: openVerifieAccountModalfn,\n          setErrorMessageProps: setErrorMessagefn,\n          showSingIn_Or_SHowSingUp: showSingIn_Or_SHowSingUp,\n          fnshowSingInOrSingUp: fnsetShowSingIn_Or_SHowSingUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ModalSingInSingUp;","map":{"version":3,"sources":["F:/AHKI/components/modalSingInSingUp/ModalSingInSingUp.js"],"names":["React","useState","Style","PopUpMessage","SingIn","SingUp","VerifyAccount","ChangeLanguage","ModalSingInSingUp","props","errorMessage","setErrorMessage","state","text","showSingIn_Or_SHowSingUp","setShowSingIn_Or_SHowSingUp","verifiedAccountModal","setverifiedAccountModal","userId","setUserId","fnsetShowSingIn_Or_SHowSingUp","e","closeModal","openOrcloseModal","closePopUp","setErrorMessagefn","openVerifieAccountModalfn","userid","contrainer","waveContainer","changelang","formContainer","closebtn","formsContainer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Style from './ModalSingInSingUp.module.scss'\r\nimport 'react-phone-input-2/lib/material.css'\r\nimport PopUpMessage from '../popUpMessage/popUpMessage'\r\nimport SingIn from './singIn/singIn'\r\nimport SingUp from './singUp/singUp'\r\nimport VerifyAccount from '../verifyAccount/verifyAccount'\r\nimport ChangeLanguage from '../changeLanguage/changeLanguage'\r\n\r\nconst ModalSingInSingUp = (props) => {\r\n  const [errorMessage,setErrorMessage]=useState({state:false,text:\"\"})// when state true show  pop up \r\n  const [showSingIn_Or_SHowSingUp, setShowSingIn_Or_SHowSingUp] = useState(true)/*change between sing in and sing up */\r\n  const [verifiedAccountModal,setverifiedAccountModal]=useState(false)//when trye open modal to put the code\r\n  const [userId,setUserId]=useState(\"\")\r\n  const fnsetShowSingIn_Or_SHowSingUp=()=>{\r\n    setShowSingIn_Or_SHowSingUp(e=>!e)\r\n  }\r\n  const closeModal=()=>{\r\n    props.openOrcloseModal()\r\n  }\r\n  const closePopUp=()=>{\r\n    setErrorMessage({state:false,text:\"\"})\r\n  }\r\n  const setErrorMessagefn=(e)=>{\r\n    setErrorMessage({...e})\r\n  }\r\n  const openVerifieAccountModalfn=(userid)=>{\r\n    setUserId(userid)\r\n    setverifiedAccountModal(e=>!e)\r\n  }\r\n  /***test */\r\n  return (\r\n    <div className={Style.contrainer}>\r\n      <div className={Style.waveContainer}>\r\n        {/*showSingIn_Or_SHowSingUp&&<h1 className={Style.logo}>NOZZLA</h1>*/}\r\n{     /*<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n        <path fill=\"#1876f3\" fill-opacity=\"1\" d=\"M0,128L48,117.3C96,107,192,85,288,117.3C384,149,480,235,576,261.3C672,288,768,256,864,229.3C960,203,1056,181,1152,144C1248,107,1344,53,1392,26.7L1440,0L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"></path>\r\n  </svg>*/}\r\n\r\n      </div>\r\n\r\n          {errorMessage.state==true&&<PopUpMessage fnclose={closePopUp} openPopUp={errorMessage}></PopUpMessage>}\r\n      <div className={Style.changelang}><ChangeLanguage></ChangeLanguage></div>\r\n      <div className={Style.formContainer}>\r\n      {verifiedAccountModal&&<VerifyAccount setErrorMessageProps={setErrorMessagefn} userId={userId}></VerifyAccount>}\r\n        <div className={Style.closebtn} onClick={()=>closeModal()}></div>\r\n        <div className={Style.formsContainer}>\r\n          <SingIn openVerifieAccountModal={openVerifieAccountModalfn} setErrorMessageProps={setErrorMessagefn}showSingIn_Or_SHowSingUp={showSingIn_Or_SHowSingUp} fnshowSingInOrSingUp={fnsetShowSingIn_Or_SHowSingUp}></SingIn>\r\n          <SingUp openVerifieAccountModal={openVerifieAccountModalfn} setErrorMessageProps={setErrorMessagefn}showSingIn_Or_SHowSingUp={showSingIn_Or_SHowSingUp} fnshowSingInOrSingUp={fnsetShowSingIn_Or_SHowSingUp}></SingUp>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalSingInSingUp\r\n"]},"metadata":{},"sourceType":"module"}