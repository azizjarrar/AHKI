{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Style from './Email.module.scss';\nimport Toast from '../../Toast/Toast';\nimport { updateEmailSendCode, updateEmailApi } from '../../../services/user';\nimport UserContext from '../../../context/userContext';\nimport LanguageContext from '../../../context/languageContext';\nimport Link from 'next/link';\n\nconst Email = () => {\n  const [toastMessage, setToastMessage] = React.useState({\n    state: false,\n    message: \"\"\n  });\n  const [user, setUser] = React.useContext(UserContext);\n  const [changeEamilData, setChangeEamilData] = React.useState(\"\");\n  const [language, setLanguage] = React.useContext(LanguageContext);\n  React.useEffect(() => {\n    if (toastMessage.state == true) {\n      setTimeout(() => {\n        setToastMessage({\n          state: false,\n          message: \"\"\n        });\n      }, 6000);\n    }\n  }, [toastMessage]);\n\n  const changeHandlerNewEamilAndCode = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setChangeEamilData(e => {\n      return _objectSpread(_objectSpread({}, e), {}, {\n        [name]: value\n      });\n    });\n  };\n\n  const sendCode = () => {\n    updateEmailSendCode(changeEamilData.email, user.token).then(result => {\n      setToastMessage({\n        state: true,\n        message: \"ab3eth sex\"\n      });\n    });\n  };\n\n  const updateEmail = () => {\n    updateEmailApi(changeEamilData.email, changeEamilData.code, user.token).then(result => {\n      if (result.data.typeError == \"incorectCode\") {\n        setToastMessage({\n          state: true,\n          message: \"ab3eth sex\"\n        });\n      } else if (result.data.typeError == \"codeInvalid\") {\n        setToastMessage({\n          state: true,\n          message: \"ab3eth sex\"\n        });\n      } else if (result.data.typeError == \"done\") {\n        setToastMessage({\n          state: true,\n          message: \"ab3eth sex\"\n        });\n      }\n    }).catch(error => {\n      setToastMessage({\n        state: true,\n        message: error.message\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: Style.container,\n    children: [toastMessage.state && /*#__PURE__*/_jsx(Toast, {\n      text: toastMessage.message\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: Style.header,\n      children: /*#__PURE__*/_jsx(\"h1\", {\n        children: language.UpdateYourEmail\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: Style.centerInputs,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: Style.warningText,\n        children: /*#__PURE__*/_jsx(\"h1\", {\n          children: language.putyournewEmail\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: Style.emailContainer,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: Style.inputContainer,\n          children: [/*#__PURE__*/_jsx(\"input\", {\n            type: \"email\",\n            onChange: e => changeHandlerNewEamilAndCode(e),\n            name: \"email\"\n          }), /*#__PURE__*/_jsx(\"label\", {\n            children: language.email\n          })]\n        }), /*#__PURE__*/_jsx(\"button\", {\n          onClick: () => sendCode(),\n          children: language.send\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.warningText,\n        children: /*#__PURE__*/_jsx(\"h1\", {\n          children: language.YouWillreciveconfermationCodeputithereAndClickUpdate\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: Style.inputContainer,\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          onChange: e => changeHandlerNewEamilAndCode(e),\n          name: \"code\"\n        }), /*#__PURE__*/_jsx(\"label\", {\n          children: language.ConfermationCode\n        })]\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: Style.btn,\n      children: [/*#__PURE__*/_jsx(\"button\", {\n        onClick: () => updateEmail(),\n        children: language.update\n      }), /*#__PURE__*/_jsx(Link, {\n        href: \"/profile\",\n        children: /*#__PURE__*/_jsx(\"button\", {\n          children: language.cancel\n        })\n      })]\n    })]\n  });\n};\n\nexport default Email;","map":null,"metadata":{},"sourceType":"module"}