{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport Style from './ModalSingInSingUp.module.scss';\nimport 'react-phone-input-2/lib/material.css';\nimport PopUpMessage from '../popUpMessage/popUpMessage';\nimport SingIn from './singIn/singIn';\nimport SingUp from './singUp/singUp';\nimport VerifyAccount from '../verifyAccount/verifyAccount';\nimport ChangeLanguage from '../changeLanguage/changeLanguage';\n\nconst ModalSingInSingUp = props => {\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState({\n    state: false,\n    text: \"\"\n  }); // when state true show  pop up \n\n  const {\n    0: showSingIn_Or_SHowSingUp,\n    1: setShowSingIn_Or_SHowSingUp\n  } = useState(true);\n  /*change between sing in and sing up */\n\n  const {\n    0: verifiedAccountModal,\n    1: setverifiedAccountModal\n  } = useState(false); //when trye open modal to put the code\n\n  const {\n    0: userId,\n    1: setUserId\n  } = useState(\"\");\n\n  const fnsetShowSingIn_Or_SHowSingUp = () => {\n    setShowSingIn_Or_SHowSingUp(e => !e);\n  };\n\n  const closeModal = () => {\n    props.openOrcloseModal();\n  };\n\n  const closePopUp = () => {\n    setErrorMessage({\n      state: false,\n      text: \"\"\n    });\n  };\n\n  const setErrorMessagefn = e => {\n    setErrorMessage(_objectSpread({}, e));\n  };\n\n  const openVerifieAccountModalfn = userid => {\n    setUserId(userid);\n    setverifiedAccountModal(e => !e);\n  };\n  /***test */\n\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: Style.contrainer,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: Style.waveContainer\n    }), errorMessage.state == true && /*#__PURE__*/_jsx(PopUpMessage, {\n      fnclose: closePopUp,\n      openPopUp: errorMessage\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: Style.changelang,\n      children: /*#__PURE__*/_jsx(ChangeLanguage, {})\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: Style.formContainer,\n      children: [verifiedAccountModal && /*#__PURE__*/_jsx(VerifyAccount, {\n        setErrorMessageProps: setErrorMessagefn,\n        userId: userId\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: Style.closebtn,\n        onClick: () => closeModal()\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: Style.formsContainer,\n        children: [/*#__PURE__*/_jsx(SingIn, {\n          openVerifieAccountModal: openVerifieAccountModalfn,\n          setErrorMessageProps: setErrorMessagefn,\n          showSingIn_Or_SHowSingUp: showSingIn_Or_SHowSingUp,\n          fnshowSingInOrSingUp: fnsetShowSingIn_Or_SHowSingUp\n        }), /*#__PURE__*/_jsx(SingUp, {\n          openVerifieAccountModal: openVerifieAccountModalfn,\n          setErrorMessageProps: setErrorMessagefn,\n          showSingIn_Or_SHowSingUp: showSingIn_Or_SHowSingUp,\n          fnshowSingInOrSingUp: fnsetShowSingIn_Or_SHowSingUp\n        })]\n      })]\n    })]\n  });\n};\n\nexport default ModalSingInSingUp;","map":null,"metadata":{},"sourceType":"module"}