{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axiosApiInstance from '../interceptor/interceptor'; // send ref token and get new token\n\nconst Addtopic = async data => {\n  return axiosApiInstance.post(\"/topic/Addtopic\", {});\n};\n\nconst getLastTopic = async () => {\n  return axiosApiInstance.post(\"/topic/getLastTopic\", {}, {\n    secure: true\n  });\n};\n\nconst getallTopics = async () => {\n  return axiosApiInstance.post(\"/topic/getallTopics\", {}, {\n    secure: true\n  });\n};\n\nconst getSpecificTopic = async data => {\n  return axiosApiInstance.post(\"/topic/getallTopics\", _objectSpread({}, data), {\n    secure: true\n  });\n};\n\nexport { getSpecificTopic, Addtopic, getLastTopic, getallTopics };","map":{"version":3,"sources":["F:/AHKI/services/todayTopic.js"],"names":["axiosApiInstance","Addtopic","data","post","getLastTopic","secure","getallTopics","getSpecificTopic"],"mappings":";;;;;;AAAA,OAAOA,gBAAP,MAA6B,4BAA7B,C,CACA;;AACA,MAAMC,QAAQ,GAAC,MAAOC,IAAP,IAAc;AAC1B,SAAOF,gBAAgB,CAACG,IAAjB,CAAsB,iBAAtB,EAAwC,EAAxC,CAAP;AACF,CAFD;;AAGA,MAAMC,YAAY,GAAC,YAAU;AAC1B,SAAOJ,gBAAgB,CAACG,IAAjB,CAAsB,qBAAtB,EAA4C,EAA5C,EAA+C;AAACE,IAAAA,MAAM,EAAE;AAAT,GAA/C,CAAP;AACF,CAFD;;AAGA,MAAMC,YAAY,GAAC,YAAU;AACzB,SAAON,gBAAgB,CAACG,IAAjB,CAAsB,qBAAtB,EAA4C,EAA5C,EAA+C;AAACE,IAAAA,MAAM,EAAE;AAAT,GAA/C,CAAP;AACF,CAFF;;AAGC,MAAME,gBAAgB,GAAC,MAAML,IAAN,IAAa;AAClC,SAAOF,gBAAgB,CAACG,IAAjB,CAAsB,qBAAtB,oBAAgDD,IAAhD,GAAsD;AAACG,IAAAA,MAAM,EAAE;AAAT,GAAtD,CAAP;AAED,CAHD;;AAID,SAAQE,gBAAR,EAA0BN,QAA1B,EAAoCG,YAApC,EAAiDE,YAAjD","sourcesContent":["import axiosApiInstance from '../interceptor/interceptor'\r\n// send ref token and get new token\r\nconst Addtopic=async (data)=>{\r\n   return axiosApiInstance.post(\"/topic/Addtopic\",{})\r\n}\r\nconst getLastTopic=async ()=>{\r\n   return axiosApiInstance.post(\"/topic/getLastTopic\",{},{secure: true})\r\n}\r\nconst getallTopics=async ()=>{\r\n    return axiosApiInstance.post(\"/topic/getallTopics\",{},{secure: true})\r\n }\r\n const getSpecificTopic=async(data)=>{\r\n   return axiosApiInstance.post(\"/topic/getallTopics\",{...data},{secure: true})\r\n\r\n }\r\nexport {getSpecificTopic ,Addtopic ,getLastTopic,getallTopics}\r\n\r\n"]},"metadata":{},"sourceType":"module"}