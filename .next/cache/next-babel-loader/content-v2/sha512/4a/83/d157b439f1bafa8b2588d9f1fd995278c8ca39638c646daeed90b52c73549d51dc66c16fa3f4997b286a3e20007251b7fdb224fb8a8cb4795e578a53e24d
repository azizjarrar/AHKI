{"ast":null,"code":"import _regeneratorRuntime from \"F:/AHKI/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:/AHKI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { refreshAccessToken, deleteRefrechTokenOldOne } from '../services/refreshAccessToken';\nvar axiosApiInstance = axios.create({\n  baseURL: 'http://46.101.169.142:5010/',\n  //baseURL: 'http://127.0.0.1:5010/',\n  withCredentials: true\n});\naxiosApiInstance.defaults.withCredentials = true; //axiosApiInstance.defaults.baseURL = 'http://127.0.0.1:5010/' // set default url\n\naxiosApiInstance.interceptors.request.use( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(config) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", config);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), function (error) {\n  Promise.reject(error);\n});\naxiosApiInstance.interceptors.response.use(function (response) {\n  return response;\n}, /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(error) {\n    var originalRequest, access_token;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(error);\n            originalRequest = error.config;\n\n            if (!(error.message == \"Network Error\")) {\n              _context2.next = 5;\n              break;\n            }\n\n            // localStorage.removeItem('ref_token');\n            // await axios.post(\"api/logout\") // change token in cookies to the bew one\n            alert(error.message); //location.reload();\n\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            if (!(error.response.status === 401)) {\n              _context2.next = 11;\n              break;\n            }\n\n            localStorage.removeItem('ref_token');\n            _context2.next = 9;\n            return axios.post(\"api/logout\");\n\n          case 9:\n            // change token in cookies to the bew one\n            window.reload();\n            return _context2.abrupt(\"return\");\n\n          case 11:\n            if (!(error.response.status === 404)) {\n              _context2.next = 13;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 13:\n            if (!(error.response.status === 403 && !originalRequest._retry)) {\n              _context2.next = 24;\n              break;\n            }\n\n            originalRequest._retry = true;\n            _context2.next = 17;\n            return refreshAccessToken(localStorage.getItem(\"ref_token\"));\n\n          case 17:\n            access_token = _context2.sent;\n            deleteRefrechTokenOldOne(localStorage.getItem(\"ref_token\")); // send the ref token and get new token\n\n            originalRequest.headers.Authorization = 'Bearer ' + access_token.data.token;\n            _context2.next = 22;\n            return axios.post(\"api/setToken\", {\n              token: access_token.data.token\n            });\n\n          case 22:\n            // change token in cookies to the bew one\n            localStorage.setItem(\"ref_token\", access_token.data.ref_token); // save the new ref_token\n\n            return _context2.abrupt(\"return\", axiosApiInstance(originalRequest));\n\n          case 24:\n            return _context2.abrupt(\"return\", Promise.reject(error));\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport default axiosApiInstance;","map":{"version":3,"sources":["F:/AHKI/interceptor/interceptor.js"],"names":["axios","refreshAccessToken","deleteRefrechTokenOldOne","axiosApiInstance","create","baseURL","withCredentials","defaults","interceptors","request","use","config","error","Promise","reject","response","console","log","originalRequest","message","alert","status","localStorage","removeItem","post","window","reload","_retry","getItem","access_token","headers","Authorization","data","token","setItem","ref_token"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,kBAAR,EAA2BC,wBAA3B,QAA0D,gCAA1D;AACA,IAAMC,gBAAgB,GAAGH,KAAK,CAACI,MAAN,CAAa;AACpCC,EAAAA,OAAO,EAAE,6BAD2B;AAEpC;AACAC,EAAAA,eAAe,EAAE;AAHmB,CAAb,CAAzB;AAKAH,gBAAgB,CAACI,QAAjB,CAA0BD,eAA1B,GAA4C,IAA5C,C,CACA;;AACAH,gBAAgB,CAACK,YAAjB,CAA8BC,OAA9B,CAAsCC,GAAtC;AAAA,sEACE,iBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA,6CACWA,MADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAAA;AAAA;AAAA;AAAA,KAIE,UAAAC,KAAK,EAAI;AAEPC,EAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf;AACH,CAPD;AAQAT,gBAAgB,CAACK,YAAjB,CAA8BO,QAA9B,CAAuCL,GAAvC,CAA2C,UAACK,QAAD,EAAc;AACvD,SAAOA,QAAP;AACD,CAFD;AAAA,uEAEG,kBAAgBH,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACDI,YAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACMM,YAAAA,eAFL,GAEuBN,KAAK,CAACD,MAF7B;;AAAA,kBAGEC,KAAK,CAACO,OAAN,IAAe,eAHjB;AAAA;AAAA;AAAA;;AAIA;AACA;AAECC,YAAAA,KAAK,CAACR,KAAK,CAACO,OAAP,CAAL,CAPD,CAQC;;AARD;;AAAA;AAAA,kBAWEP,KAAK,CAACG,QAAN,CAAeM,MAAf,KAAyB,GAX3B;AAAA;AAAA;AAAA;;AAYCC,YAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AAZD;AAAA,mBAaOvB,KAAK,CAACwB,IAAN,CAAW,YAAX,CAbP;;AAAA;AAagC;AAC/BC,YAAAA,MAAM,CAACC,MAAP;AAdD;;AAAA;AAAA,kBAkBEd,KAAK,CAACG,QAAN,CAAeM,MAAf,KAA0B,GAlB5B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,kBAqBGT,KAAK,CAACG,QAAN,CAAeM,MAAf,KAA0B,GAA1B,IAAiC,CAACH,eAAe,CAACS,MArBrD;AAAA;AAAA;AAAA;;AAsBGT,YAAAA,eAAe,CAACS,MAAhB,GAAyB,IAAzB;AAtBH;AAAA,mBAuB8B1B,kBAAkB,CAACqB,YAAY,CAACM,OAAb,CAAqB,WAArB,CAAD,CAvBhD;;AAAA;AAuBSC,YAAAA,YAvBT;AAwBG3B,YAAAA,wBAAwB,CAACoB,YAAY,CAACM,OAAb,CAAqB,WAArB,CAAD,CAAxB,CAxBH,CAyBG;;AACAV,YAAAA,eAAe,CAACY,OAAhB,CAAwBC,aAAxB,GAAwC,YAAYF,YAAY,CAACG,IAAb,CAAkBC,KAAtE;AA1BH;AAAA,mBA2BSjC,KAAK,CAACwB,IAAN,CAAW,cAAX,EAA0B;AAACS,cAAAA,KAAK,EAACJ,YAAY,CAACG,IAAb,CAAkBC;AAAzB,aAA1B,CA3BT;;AAAA;AA2BoE;AACjEX,YAAAA,YAAY,CAACY,OAAb,CAAqB,WAArB,EAAiCL,YAAY,CAACG,IAAb,CAAkBG,SAAnD,EA5BH,CA4BiE;;AA5BjE,8CA6BUhC,gBAAgB,CAACe,eAAD,CA7B1B;;AAAA;AAAA,8CA+BML,OAAO,CAACC,MAAR,CAAeF,KAAf,CA/BN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFH;;AAAA;AAAA;AAAA;AAAA;AAoCA,eAAgBT,gBAAhB","sourcesContent":["import axios from 'axios'\r\nimport {refreshAccessToken,deleteRefrechTokenOldOne} from '../services/refreshAccessToken'\r\nconst axiosApiInstance = axios.create({\r\n  baseURL: 'http://46.101.169.142:5010/',\r\n  //baseURL: 'http://127.0.0.1:5010/',\r\n  withCredentials: true\r\n})\r\naxiosApiInstance.defaults.withCredentials = true\r\n//axiosApiInstance.defaults.baseURL = 'http://127.0.0.1:5010/' // set default url\r\naxiosApiInstance.interceptors.request.use(\r\n  async config => {\r\n      return config;\r\n  },\r\n  error => {\r\n\r\n    Promise.reject(error)\r\n});\r\naxiosApiInstance.interceptors.response.use((response) => {\r\n  return response\r\n}, async function (error) {\r\n  console.log(error)\r\n  const originalRequest = error.config;\r\n  if(error.message==\"Network Error\"){\r\n   // localStorage.removeItem('ref_token');\r\n   // await axios.post(\"api/logout\") // change token in cookies to the bew one\r\n\r\n    alert(error.message)\r\n    //location.reload();\r\n    return\r\n  }\r\n  if(error.response.status ===401){\r\n    localStorage.removeItem('ref_token');\r\n    await axios.post(\"api/logout\") // change token in cookies to the bew one\r\n    window.reload()\r\n\r\n    return\r\n  }\r\n  if(error.response.status === 404){\r\n    return\r\n  }\r\n  if (error.response.status === 403 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      const access_token = await refreshAccessToken(localStorage.getItem(\"ref_token\")); \r\n      deleteRefrechTokenOldOne(localStorage.getItem(\"ref_token\"))\r\n      // send the ref token and get new token\r\n      originalRequest.headers.Authorization = 'Bearer ' + access_token.data.token;\r\n      await axios.post(\"api/setToken\",{token:access_token.data.token}) // change token in cookies to the bew one\r\n      localStorage.setItem(\"ref_token\",access_token.data.ref_token) // save the new ref_token\r\n      return axiosApiInstance(originalRequest); // return new  request with the new token\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport  default axiosApiInstance;"]},"metadata":{},"sourceType":"module"}